<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zookeeper on cuterwrite (Pang S.Z)</title>
    <link>https://cuterwrite.top/tags/zookeeper/</link>
    <description>Recent content in Zookeeper on cuterwrite (Pang S.Z)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 21 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cuterwrite.top/tags/zookeeper/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zookeeper on k8s部署实验</title>
      <link>https://cuterwrite.top/p/zookeeper-on-k8s/</link>
      <pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cuterwrite.top/p/zookeeper-on-k8s/</guid>
      <description>Zookeeper on k8s部署实验 1 简介 1.1 实验环境 1.2 集群规划 2 创建ConfigMap 2.1 创建zookeeper-environment 2.2 创建zookeeper-setup 3 创建StatefulSet 3.1 创建工作容器 3.2 创建存储挂载 3.3 创建SVC 3.4 设置亲和性 4 部署结果 4.1 集群信息 4.2 节点状态测试 Zookeeper on k8s部署实验 1 简介 1.1 实验环境 已经使用Kuboard Spary搭建好Kubernetes集群和Kuboard，使用的软件如下：
名称 版本 kuboard spary v1.2.3-amd64 kubernetes v1.25.5 zookeeper 3.8.0 1.2 集群规划 Zookeeper（三台4核8G的Ubuntu20.04服务器） 主机名 IP node1 192.168.0.6 node2 192.168.0.7 node3 192.168.0.14 2 创建ConfigMap 2.1 创建zookeeper-environment 创建一个名为zookeeper-environment的配置字典，包含变量对如下： Key Value ALLOW_ANONYMOUS_LOGIN yes BITNAMI_DEBUG false ZOO_4LW_COMMANDS_WHITELIST srvr, mntr, ruok ZOO_DATA_LOG_DIR ZOO_ENABLE_AUTH no ZOO_INIT_LIMIT 10 ZOO_LOG_LEVEL ERROR ZOO_MAX_CLIENT_CNXNS 60 ZOO_PORT_NUMBER 2181 ZOO_SERVERS zookeeper-statefulset-0.</description>
    </item>
    
  </channel>
</rss>
