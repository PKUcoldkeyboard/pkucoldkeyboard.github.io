[{"content":"1、命令返回值  状态回复  OK：成功 PONG：响应PING   错误回复：命令不存在或者命令格式有误  Error Unknown command   整数回复：  INCR命令：返回递增后的键值 DBSIZE命令：返回键的数量   字符串回复：  请求键的值或者请求一个其他类型键中的某个元素   多行字符串回复：  请求非字符串类型键的元素列表 Keys (Pattern)：返回数据库中符合指定规则的键名    2、多数据库  一个Redis实例提供了多个用来存储数据的字典，客户端可以指定数据存储在哪个字典中。 数据库默认从0开始递增命名，默认支持16个数据库（DB0，DB1，\u0026hellip;，DB15） 不支持自定义数据库名字，也不支持单独设置访问密码  3、命令大全 1、通用命令 keys pattern 获得符合规则的键名列表，支持？、*、[]、\\x四种通配符\n keys命令会遍历所有键，不建议在生产环境中使用 命令不区分大小写  exists key  如果键存在返回1，否则返回0  del key  删除一个或多个键，返回删除的键的个数  type key  获得键值的数据类型  2、字符串类型 简介  字符串类型是Redis中最基本的数据类型，它能存储任何形式的字符串，包括二进制数据，可以存储邮箱、JSON、或者一张图片，允许存储的最大容量是512MB  set key value / get key  赋值与取值  incr key  递增数字，让当前键值递增，并返回递增后的值 如果key不存在时会默认键值为0  incrby key increment  增加指定的整数  decr key  同上  decrby key decrement  同上  incrbyfloat key increment  增加指定浮点数  append key value  尾部追加  strlen key  字符串长度  mget key / mset key1 value1 \u0026hellip;  同时获取/设置多个键值  位操作  getbit key offset setbit key offset value bitcount key bittop  使用场景  文章访问量统计：为每篇文章使用一个名为post:文h章ID:page.view的键来记录文章的访问量，每次访问文章的时候使用incr命令。（键命名建议：“对象类型：对象ID：对象属性”） 生成自增ID：对于每一类对象使用名为对象类型：count的键来存储当前类型对象的数量（如users:count），每次新增一个对象时都使用incr命令，返回值就是该新增对象的ID。 存储文章数据：JSON存储  3、hash类型 简介  散列类型适合存储对象：使用对象类别和ID构成键名，使用字段表示属性，字段值则存储属性值。一个键最多存2^32 - 1个元素  hset key field value  hset car price 500  hget key field  hget car price  hmset key field value hmget key field hgetall key hexists key field hsetnx key field value   当字段不存在时赋值\n  原子操作，线程安全\n  hincrby key field increment hdel key field 其他命令  hkeys hvals hlen  使用场景  存储文章数据 存储文章缩略名：使用slug.to.id的键来存储文章缩略名和ID之间的映射关系。这样就可以用hexists判断缩略名是否存在，使用hget命令来获取缩略名对应的文章ID  4、list类型 简介  可以存储一个有序的字符串列表，常用操作是向列表两端添加元素 底层：双向链表，添加复杂度O（1） 适用场景：只关心最新的内容 一个键最多存2^32 - 1个元素  lpush key value1\u0026hellip; rpush key value1\u0026hellip; lpop key rpop key llen key lrange key start stop  获取列表片段（两边都是闭区间） 支持负索引（与python类似） 0，-1会返回所有元素 start \u0026gt; stop：返回空 stop \u0026gt; len：返回start,start + len  lrem key count value  删除列表中前count个值为value的元素，返回值是实际删除的元素个数 count\u0026gt;0时，从列表左边开始删除 count\u0026lt;0时，从列表右边开始删除 count=0时，删除所有  lindex key index  索引取值，支持负数  lset key index value  索引赋值  ltrim key start end  删除指定索引外的全部值  linsert key before|after pivot value  首先查找pivot，然后插入其前面或后面  rpoplpush source destination  将一个元素转到另一个列表  使用场景  存储文章ID列表 存储评论列表  5、set类型 简介  无序、唯一 最多2^32 - 1个元素 常用操作：插入、删除、判断某个元素是否存在、交集、并集、差集  sadd key member srem key member smembers  返回所有元素  sismember key member   判断元素是否在集合中\n  O（1）\n  sdiff key1 key2 \u0026hellip;  求差集（ key1 - key2）  sinter key1 key2\u0026hellip;  求交集  sunion key1 key2\u0026hellip;  求并集  scard key  获取元素个数  sdiffstore/sinterstore/sunionstore destination key1 key2\u0026hellip;  存储集合操作的结果  srandmember key count  count\u0026gt;0时，获取不重复的随机count个元素 count\u0026lt;0时，获取可能重复的随机count个元素  spop  随机选择一个元素弹出  使用场景  存储文章标签 通过标签搜索文章  6、zset类型 简介  有序 唯一 可以获取某一范围的袁旭 底层：散列表和跳表，读取速度为O(logn)  zadd key score member  支持整数、双精度浮点数，甚至-inf和+inf 可以修改score  zscore key member zrange key start stop [withscores]   获得排名在某个范围的元素\n  可以添加分数\n  复杂度为O(logn + m)\n  zrangebyscore key min max [withscores] limit offset count  获得指定分数范围的元素，两边是闭区间 支持inf 数字前添加左圆括号表示开区间 可以用limit限制返回的个数  zrevrangebyscore key max min [withscores] limit offset count  同上，改成降序  zincrby key increment member  增加某个元素的分数  zcard key  元素数量  zcount key min max  分数范围内个数  zrem key member1 \u0026hellip; zremrangebyranke key start stop  根据排名范围删除元素  zremrangebyscore key min max  根据分数范围删除元素  zrank key member  获取元素排名  zrevrank key member  降序排名  ","date":"2021-04-07T00:00:00Z","permalink":"https://cuterwrite.top/p/redis-1/","title":"Redis入门"}]