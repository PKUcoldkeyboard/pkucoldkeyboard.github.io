[{"content":"搭建玄铁 900 系列工具链与 xuan...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"搭建玄铁 900 系列工具链与 xuantie-qemu 环境","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"6475175c4104b58251e36d6e7113572e","summary":"搭建玄铁 900 系列工具链与 xuantie-qemu 环境 一、搭建平台 Linux 发行版：CentOS Linux release 7.6.1810 (Core) 内核版本：3.10.0-957.el7.x86_64 $ cat /etc/centos-release CentOS Linux release 7.6.1810 (Core) $","tags":["RISC-V","Linux 内核"],"type":["高性能计算","综合技术栈"],"url":"https://cuterwrite.top/p/thead-tools/"},{"content":"OpenMP 简介 简介 什么是 Ope...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"OpenMP 简介","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"8128bdd98620a01eda81eeb4e69b6f67","summary":"OpenMP 简介 简介 什么是 OpenMP？ OpenMP（Open Multi-Processing）是一种广泛应用的多线程并行编程模型，它为共享内存系统上","tags":["OpenMP","并行计算"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/openmp-intro/"},{"content":"RDMA 基本元素 本文欢迎非商业转载，...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"RDMA 基本元素","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"d26de837e821d6e75235b238bf20bc7b","summary":"RDMA 基本元素 本文欢迎非商业转载，转载请注明出处。 声明：仅用于收藏，便于阅读 ― Savir, 知乎专栏：3. RDMA 基本元素 RDMA 技术中经常使用缩略语，很容易让刚接触的","tags":["RDMA","计算机网络","转载"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/rdma-element/"},{"content":"比较基于传统以太网与 RDMA 技术的通...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"比较基于传统以太网与 RDMA 技术的通信","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"7aed8c5f3bd474d19255cbc5b37faa3d","summary":"比较基于传统以太网与 RDMA 技术的通信 本文欢迎非商业转载，转载请注明出处。 声明：仅用于收藏，便于阅读 ― Savir, 知乎专栏：2. 比较基于传统以太网与 RDMA 技术的","tags":["RDMA","计算机网络","转载"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/ethernet-vs-rdma/"},{"content":"编译安装 UCX 1.15.0 与 Op...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"编译安装 UCX 1.15.0 与 OpenMPI 5.0.0：详尽指南","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"f5c76a421392de44cf84474906d8dcba","summary":"编译安装 UCX 1.15.0 与 OpenMPI 5.0.0：详尽指南 一、环境准备 首先，请确保您的系统满足以下基本要求： 操作系统：支持 Linux（如 Ubuntu 20.04 LTS）或其他类 Unix 操作","tags":["MPI","计算机网络","并行计算"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/openmpi-with-ucx/"},{"content":"GCC-13.2.0 编译安装 GCC ...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"GCC-13.2.0 编译安装","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"83f80eef7a0825052ff069cc90965956","summary":"GCC-13.2.0 编译安装 GCC 13.1 已被发布为 GCC 13 的第一个稳定版本，作为 GNU 编译器集合的年度功能发布。 GCC 13.1 是一个重大更新，为那些对一些老式编程感兴趣的人添加了 Modula-2 语言","tags":null,"type":["综合技术栈"],"url":"https://cuterwrite.top/p/gcc-13-source-install/"},{"content":"RDMA 概述 本文欢迎非商业转载，转载...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"RDMA 概述","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"0aa1d267249509c789409db3bdf762d8","summary":"RDMA 概述 本文欢迎非商业转载，转载请注明出处。 声明：仅用于收藏，便于阅读 ― Savir, 知乎专栏：1. RDMA 概述 本想完全靠自己的语言完成这篇概述，然而开篇并没有","tags":["RDMA","计算机网络","转载"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/rdma-overview/"},{"content":"在 HPC 上运行 Apache Spa...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"在 HPC 上运行 Apache Spark","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"4e9180631bada19d729815f69c28fb84","summary":"在 HPC 上运行 Apache Spark 一、概述 Apache Spark 是一个多语言引擎，用于在单节点机器或集群上执行数据工程、数据科学和机器学习任务。本文将为您提供在高性能计算（HPC","tags":["Spark","分布式计算"],"type":["高性能计算","大数据技术"],"url":"https://cuterwrite.top/p/run-spark-on-hpc/"},{"content":"一、引言 随着图片格式的不断发展，AVI...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"使用 Pillow + Plugin 处理 AVIF 和 HEIC 图片","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"91c9a9f92a4c5511dd0f9f77bf4ffb17","summary":"一、引言 随着图片格式的不断发展，AVIF 和 HEIC 这两种高效的图片格式逐渐受到了开发者的关注。AVIF（AV1 Image File Format）是一种基于 AV1 视频编","tags":null,"type":["综合技术栈"],"url":"https://cuterwrite.top/p/processing-avif-heic-images-pillow-plugins/"},{"content":"Ring buffer 详解 一、概述 ...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"Ring buffer 详解","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"524e6f84a6dd9074457897f849e62f07","summary":"Ring buffer 详解 一、概述 ring buffer 称作 环形缓冲区 ，也称作环形队列（circular queue），是一种用于表示一个固定尺寸、头尾相连的缓冲区的数据结构，适","tags":null,"type":["综合技术栈"],"url":"https://cuterwrite.top/p/ring-buffer/"},{"content":"性能刺客之伪共享 一、前言 在多核并发编...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"性能刺客之伪共享","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"8b663ed62e4a20ad1395253182e9ec67","summary":"性能刺客之伪共享 一、前言 在多核并发编程中，如果将互斥锁的争用比作 性能杀手 的话，那么伪共享则相当于 性能刺客。杀手 与 刺客 的区别在于杀手是可见的，","tags":["并行计算"],"type":["高性能计算","综合技术栈"],"url":"https://cuterwrite.top/p/false-sharing/"},{"content":"离子通道与 Hudgkin-Huxley...","hierarchy_lvl0":"计算神经科学","hierarchy_lvl1":"离子通道与 Hudgkin-Huxley 模型","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"ca1f5e92eda2d3d9e55f134f28a73179","summary":"离子通道与 Hudgkin-Huxley 模型 从生物物理学的角度来看，动作电位是通过细胞膜中离子通道的电流的结果。在对乌贼的巨型轴突进行的一系列广泛实验中，霍奇金和胡克斯","tags":["SNN"],"type":["计算神经科学"],"url":"https://cuterwrite.top/p/ion-channels-and-hudgkin-huxley/"},{"content":"脉冲神经网络入门：神经元与数学 一、神经...","hierarchy_lvl0":"计算神经科学","hierarchy_lvl1":"脉冲神经网络入门：神经元与数学","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"87e1170f2e86d922d2b011b43d2549db","summary":"脉冲神经网络入门：神经元与数学 一、神经元系统的结构 生物神经元是一种高度特化的细胞，其结构和功能包含很多因素，其中神经元的几何形态特征和电学物","tags":["SNN"],"type":["计算神经科学"],"url":"https://cuterwrite.top/p/introduction-neuron-math/"},{"content":"NEST on HPC 安装教程 1. ...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"NEST on HPC 安装教程","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"9e2a89d658796ba0501ee84b8a23bf08","summary":"NEST on HPC 安装教程 1. 安装 MiniConda3 从 Miniconda3 官方网站 下载 Miniconda3_py39_23.5.2 。 wget https://repo.anaconda.com/miniconda/Miniconda3-py39_23.5.2-0-Linux-x86_64.sh 执行 Miniconda3-py39_23.5.2-0-Linux-x86_64.sh ，按照提示安装 Miniconda3。（安装在 $HOME/software/miniconda3/23.5.2 目录下） 然后，设置 Miniconda3 环境变量。 export PATH=$HOME/software/miniconda3/23.5.2/bin:$PATH 2. 安装 Boost","tags":["并行计算"],"type":["高性能计算","计算神经科学"],"url":"https://cuterwrite.top/p/nest-on-hpe-install/"},{"content":"CUDA 基础：内存访问模式 大多数设备...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"CUDA 基础：内存访问模式","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"c4faa58d4b2ff431cc85e82a848ef088","summary":"CUDA 基础：内存访问模式 大多数设备端数据访问都是从全局内存开始的，并且多数 GPU 应用程序容易受内存带宽的限制。因此，最大限度地利用全局内存带宽是调控","tags":["并行计算","CUDA"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/cuda-base-memory-access-mode/"},{"content":"CUDA 基础：内存管理 CUDA 编程...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"CUDA 基础：内存管理","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"66a6db217f0e2289824213abaf6df60a","summary":"CUDA 基础：内存管理 CUDA 编程的内存管理与 C 语言的类似，需要程序员显式地管理主机和设备之间的数据移动。随着 CUDA 版本的升级，NVIDIA 正系统地实现主机","tags":["并行计算","CUDA"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/cuda-base-memory-manage/"},{"content":"CUDA 基础：内存模型概述 内存的访问...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"CUDA 基础：内存模型概述","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"35b6d63921b95c9856b08088105a0fcf","summary":"CUDA 基础：内存模型概述 内存的访问和管理是所有编程语言的重要部分。在现代加速器中，内存管理对高性能计算有着很大的影响。 因为多数工作负载被加载和存","tags":["并行计算","CUDA"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/cuda-base-memory-model/"},{"content":"CUDA 基础：线程束执行的本质 1. ...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"CUDA 基础：线程束执行的本质","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"b9da2a819efadcae8651a63770cc4453","summary":"CUDA 基础：线程束执行的本质 1. 线程束和线程块 线程束是 SM 中基本的执行单元，当一个线程块的网格被启动后，网格中的线程块分布在 SM 中。一旦线程块被调度在","tags":["并行计算","CUDA"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/cuda-base-warp/"},{"content":"SSE 与 AVE 向量化编程 一、 向...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"SSE 与 AVE 向量化编程","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"ecf11afc0f774124a186d3164b8f02ed","summary":"SSE 与 AVE 向量化编程 一、 向量化编程简介 近年来，CPU 已经达到了一些物理和功率限制，因此在 GHz 方面，CPU 速度并没有显著提高。随着计算需求的不断增加","tags":["向量化编程","SIMD","并行计算"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/simd/"},{"content":"程序调试与优化分析工具 一、概述 在编程...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"程序调试与优化分析工具","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"9094392aa55a5a0c498a5be0d0f1e5f3","summary":"程序调试与优化分析工具 一、概述 在编程中我们通常会遇到如下问题： 程序运行慢，效率低 消耗了大量的内存 segmentation fault 程序崩溃 程序运行结果不正确\u0026hellip","tags":["debug","optimization"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/debug-and-optimize/"},{"content":"高性能异步 I/O 框架：io_urin...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"高性能异步 I/O 框架：io_uring","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"bee24f2ff7d0a67f861cea7ecb3eea0a","summary":"高性能异步 I/O 框架：io_uring 一、 引言 1. Linux 原生 aio 接口 在 Linux 中，有很多方法可以进行基于文件的 I/O。最早的和最基本的就是系统调用 read(2","tags":["AIO","Linux-内核"],"type":["高性能计算","综合技术栈"],"url":"https://cuterwrite.top/p/efficient-liburing/"},{"content":"RDMA 技术及其编程方法（二）：编程指...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"RDMA 技术及其编程方法（二）：编程指导","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"278dd7370ee7fdd16ff12ad2e9401a8d","summary":"RDMA 技术及其编程方法（二）：编程指导 一、libibverbs 简介 libibverbs 由 Roland Dreier 自 2006 年开始开发和维护，实际上是*nix 中的 Verbs API 标准 开源 Verbs 的核心部分自 2005","tags":["RDMA","计算机网络"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/rdma-tutorial/2/"},{"content":"RDMA 技术及其编程方法（一）：RDM...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"RDMA 技术及其编程方法（一）：RDMA 简介与原理","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"1e1c6132a1bf56b264420d00618f7a18","summary":"RDMA 技术及其编程方法（一）：RDMA 技术 一、 RDMA 技术简介 RDMA: Remote Direct Memory Access RDMA 就是一种远程直接内存访问技术，它可以让远程主机直接访问本地内存，而不需要经过","tags":["RDMA","计算机网络"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/rdma-tutorial/1/"},{"content":"MPI 与并行计算（五）：MPI 扩展 ...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"MPI 与并行计算（五）：MPI 扩展","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"d10a54ac0ef8b3121143a956a42b24fe","summary":"MPI 与并行计算（五）：MPI 扩展 1. 动态进程 MPI-1 假定所有的进程都是静态的，运行时不能增加和删除进程。MPI-2 引入了动态进程的概念： MPI-1 不定义如何创","tags":["MPI","并行计算"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/mpi-tutorial/5/"},{"content":"MPI 与并行计算（四）：数据类型 1....","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"MPI 与并行计算（四）：数据类型","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"16336cac408b3b826476a3c7815fe190","summary":"MPI 与并行计算（四）：数据类型 1. 预定义数据类型 MPI 支持异构计算(Heterogeneous Computing)，它指在不同计算机系统上运行程序，","tags":["MPI","并行计算"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/mpi-tutorial/4/"},{"content":"MPI 与并行计算（三）：集合通信 1....","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"MPI 与并行计算（三）：集合通信","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"37cb877e9bf28272d0850e000aad7bf3","summary":"MPI 与并行计算（三）：集合通信 1. 定义 集合通信（Collective Communication）：是一个进程组中的所有进程都参加的全局通信操作。","tags":["MPI","并行计算"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/mpi-tutorial/3/"},{"content":"MPI 与并行计算（二）：点到点通信 1...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"MPI 与并行计算（二）：点到点通信","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"65e3b2f3e47ba6ee0c85c58bdb8a8e34","summary":"MPI 与并行计算（二）：点到点通信 1. MPI 的通信模式 通信模式：指的是缓冲管理以及发送方和接收方之间的同步方式。 MPI 支持四种通信模式：标准通信模式、缓冲","tags":["MPI","并行计算"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/mpi-tutorial/2/"},{"content":"MPI 与并行计算（一）：并行环境及编程...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"MPI 与并行计算（一）：并行环境及编程模型","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"88a4a08356e27bed49b8f847898ed1ae","summary":"MPI 与并行计算（一）：并行环境及编程模型 1. 什么是 MPI Massage Passing Interface：是消息传递函数库的标准规范，由 MPI 论坛开发，支持 Fortran 和 C。 一种新的库描述","tags":["MPI","并行计算"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/mpi-tutorial/1/"},{"content":"CUDA 编程：从基础到应用 一、什么是...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"CUDA 编程：从基础到应用","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"f1acbb5458493af3751ec97d194bfb5c","summary":"CUDA 编程：从基础到应用 一、什么是 CUDA CUDA 是 NVIDIA 推出的一种通用并行计算平台和编程模型，可以利用 GPU 的强大计算能力来加速各种应用程序。 CUDA 的优势在于： 提供了","tags":["并行计算","CUDA"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/cuda-tutorial/"},{"content":"SVD 与 NMF：矩阵分解的两种方法 ...","hierarchy_lvl0":"大数据技术","hierarchy_lvl1":"SVD 与 NMF：矩阵分解的两种方法","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"37c92f91268b9e2c8d7b0973e8898aa7","summary":"SVD 与 NMF：矩阵分解的两种方法 在数据科学中，矩阵分解技术是一种强大的工具，可以用于各种应用，如推荐系统、图像处理和自然语言处理。在这篇文章中","tags":["Algorithm"],"type":["大数据技术","Python-数据分析"],"url":"https://cuterwrite.top/p/matrix-factorization/"},{"content":"最小反馈弧集合问题 一、引言 在复杂网络...","hierarchy_lvl0":"数据结构与算法","hierarchy_lvl1":"最小反馈弧集合问题","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"4d79bb90a9d4204051b5d7eb4656c034","summary":"最小反馈弧集合问题 一、引言 在复杂网络分析、社会学、生物信息学等领域，我们经常需要处理的一个问题是如何从一个有向图中移除最少的边，使得图中不再","tags":["Algorithm"],"type":["数据结构与算法"],"url":"https://cuterwrite.top/p/fas/"},{"content":"RDMA: Soft-RoCE 环境搭建...","hierarchy_lvl0":"高性能计算","hierarchy_lvl1":"RDMA：Soft-RoCE 环境搭建实验","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"b29b699c25b6c31fc4972e04cb7d30c1","summary":"RDMA: Soft-RoCE 环境搭建实验 1. RoCE 简介 RoCE 是三大 RDMA 协议之一，全称为 RDMA Over Converged Ethernet，即基于融合以太网的 RDMA。它是一种基于传统以太网的部分下层协议，","tags":["RDMA"],"type":["高性能计算"],"url":"https://cuterwrite.top/p/soft-roce/"},{"content":"基于 Flink Native Kube...","hierarchy_lvl0":"大数据技术","hierarchy_lvl1":"基于 Flink Native Kubernetes 的词频统计实验","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"591095f369b666bc9199bbb9b0965d32","summary":"基于 Flink Native Kubernetes 的词频统计实验 1 简介 1.1 实验环境 本实验主要使用 Ubuntu 20.04 64 位作为系统环境，采用 3 台 4 核 8GB 云服务器作为 Kubernetes 集群部署机器，1 台 4 核 8GB 云服务器作为","tags":["Flink","Kubernetes","分布式计算","云原生"],"type":["大数据技术","容器技术"],"url":"https://cuterwrite.top/p/flink-native-k8s/"},{"content":"基于 Spark on k8s 的词频统...","hierarchy_lvl0":"大数据技术","hierarchy_lvl1":"基于 Spark on k8s 的词频统计实验","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"827301b50542795537e71caed9bbb987","summary":"基于 Spark on k8s 的词频统计实验 1 简介 1.1 实验环境 本实验主要使用 Ubuntu 20.04 64 位作为系统环境，采用 6 台 4 核 8GB 云服务器作为 Kubernetes 集群部署机器，1 台 2 核 4GB 云服务器作为","tags":["Spark","Kubernetes","分布式计算","云原生"],"type":["大数据技术","容器技术"],"url":"https://cuterwrite.top/p/spark-on-k8s/"},{"content":"MapReduce 实验 1 简介 1....","hierarchy_lvl0":"大数据技术","hierarchy_lvl1":"MapReduce 实验","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"1de85ebea392d8455cac19180fd463f8","summary":"MapReduce 实验 1 简介 1.1 实验环境 本实验主要使用 Ubuntu 20.04 64 位作为系统环境，采用 3 台 4 核 8GB 云服务器作为 Haddop 集群部署机器，使用的软件如下： 名称 版本 Hadoop 3.2.3 IDEA 2022.2.3 1.2 集群规","tags":null,"type":["大数据技术"],"url":"https://cuterwrite.top/p/mapreduce/"},{"content":"Zookeeper on k8s 部署实...","hierarchy_lvl0":"大数据技术","hierarchy_lvl1":"Zookeeper on k8s 部署实验","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"c9c5ebaaaa9c312036db60f7ade007c3","summary":"Zookeeper on k8s 部署实验 1 简介 1.1 实验环境 已经使用 Kuboard Spary 搭建好 Kubernetes 集群和 Kuboard，使用的软件如下： 名称 版本 kuboard spary v1.2.3-amd64 kubernetes v1.25.5 zookeeper 3.8.0 1.2 集群规划 Zookeeper（","tags":["Zookeeper","Kubernetes","云原生"],"type":["大数据技术","容器技术"],"url":"https://cuterwrite.top/p/zookeeper-on-k8s/"},{"content":"Hadoop3 HA 模式三节点高可用集...","hierarchy_lvl0":"大数据技术","hierarchy_lvl1":"Hadoop3 HA 模式三节点高可用集群搭建实验","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"a196173d46d4358dcaff1159eaec0683","summary":"Hadoop3 HA 模式三节点高可用集群搭建实验 关于 Hadoop3 HA 模式 单点故障（SPOF） 简单来说，单点故障指的是分布式系统过度依赖于某一个节点，以至于只要该节点宕掉","tags":["Hadoop"],"type":["大数据技术"],"url":"https://cuterwrite.top/p/hadoop-ha/"},{"content":"路径规划算法之 A* 与 D* Lite...","hierarchy_lvl0":"数据结构与算法","hierarchy_lvl1":"路径规划算法之 A* 与 D* Lite 原理详解","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"8b21161acb8ebdbb1f8ddb50e000e4f0","summary":"路径规划算法之 A* 与 D* Lite 原理详解 问题描述 如何在一个网格地图中找到两点之间的最短路径 基础算法介绍 如果要在一个网格地图中找到两点之间的最短路径，很","tags":["Algorithm"],"type":["数据结构与算法"],"url":"https://cuterwrite.top/p/route-planning-alogrithm/"},{"content":"聊聊前缀树 Trie Trie 树简介 ...","hierarchy_lvl0":"数据结构与算法","hierarchy_lvl1":"聊聊前缀树 Trie","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"bc9b71242e009d31e8a4529b87ae17dc","summary":"聊聊前缀树 Trie Trie 树简介 Trie 树，也叫“字典树”。顾名思义，它是一个树形结构。它是一种专门处理字符串匹配的数据结构，用来解决在一组字符串集合中快速查","tags":["Algorithm"],"type":["数据结构与算法"],"url":"https://cuterwrite.top/p/trie/"},{"content":"Spring Cloud OAuth2 ...","hierarchy_lvl0":"Spring-Cloud-Alibaba","hierarchy_lvl1":"Spring Cloud OAuth2 从零开始实现用户认证和单点登录","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"d2ada6eb5a211c72eb79318f7871d72f","summary":"Spring Cloud OAuth2 从零开始实现用户认证和单点登录 OAuth2 是什么 OAuth2 其实是一个关于授权的网络标准，它制定了设计思路和运行流程，利用这个标准我们其实是可以自己实现 OAuth2","tags":["Java","微服务"],"type":["Spring-Cloud-Alibaba","SpringBoot"],"url":"https://cuterwrite.top/p/oauth2-guide/"},{"content":"机器学习重要术语词汇表 精确度 Accu...","hierarchy_lvl0":"Python-数据分析","hierarchy_lvl1":"机器学习重要术语词汇表","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"93a3d40b9359ac1d5a3b3d440afd3b06","summary":"机器学习重要术语词汇表 精确度 Accuracy 在分类中，准确性是正确分类的项数目除以测试集内的项总数。 范围从 0（最不准确）到 1（最准确）。 准确性是模型性能的","tags":["机器学习"],"type":["Python-数据分析"],"url":"https://cuterwrite.top/p/machine-learning-terms/"},{"content":"Stream 常见用法 1 Stream...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"Java-Stream 常见用法","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"394ea3cb1044ba5a62fded3017b90704","summary":"Stream 常见用法 1 Stream 概述 Stream 将要处理的元素集合看作一种流，在流的过程中，借助Stream API 对流中的元素进行操作，比如：筛选、排序、聚合等。 Stream 可以由数","tags":["Java"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/java-stream/"},{"content":"Java 并发知识点笔记 1 使用线程的...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"Java 并发知识点笔记","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"af2bac75d5bcb002917137e13b563246","summary":"Java 并发知识点笔记 1 使用线程的方法 实现 Runnable 接口； 实现 Callable 接口； 继承 Thread 类。 2 基础线程机制 2.1 Executor Executor 管理多个异步任务的执行，而无需程序员显式地管理线程的生","tags":["Java"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/java-concurrent/"},{"content":"Java 容器知识点笔记 1 概述 容器...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"Java 容器知识点笔记","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"34b9f7411de6d91fa4e4c721c4f477d7","summary":"Java 容器知识点笔记 1 概述 容器主要包括 Collection 和 Map 两种，Collection 存储着对象的集合，而 Map 存储着键值对（两个对象）的映射表。 1.1 Collection 1.1.1 Set TreeS","tags":["Java"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/java-collection/"},{"content":"JavaSE 知识点笔记 1 数据类型 ...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"JavaSE 知识点笔记","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"93c6cb2f3b1f8d531cec2de5da70af31","summary":"JavaSE 知识点笔记 1 数据类型 1.1 基本类型 byte/8 char/16 short/16 int/32 float/32 long/64 double/64 boolean/~ 1.2 包装类型 基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱","tags":["Java"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/java-se/"},{"content":"JVM 知识点笔记 1 运行时数据区域 ...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"JVM 知识点笔记","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"144214d0f1abb5920cbb489c196fcba9","summary":"JVM 知识点笔记 1 运行时数据区域 1.1 程序计数器 记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。 1.2 Java 虚拟机栈 每个 Java 方法在执行","tags":["Java"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/jvm/"},{"content":"Socket 与 IO 模型 1 IO ...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"Socket 与 IO 模型","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"20fd3971d8e3efed5b98883e26f3822d","summary":"Socket 与 IO 模型 1 IO 模型 1.1 阻塞式 IO 应用进程被阻塞，直到数据从内核缓冲区复制到应用进程缓冲区中才返回。 应该注意到，在阻塞的过程中，其它应用进程还可以","tags":null,"type":["综合技术栈"],"url":"https://cuterwrite.top/p/io-model/"},{"content":"一、数据库系统原理 1 事务 1.1 概...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"计算机基础知识点总结（数据库系统 + MySQL + Redis）","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"5fea783e5125400a162f8ebe91d9e34e","summary":"一、数据库系统原理 1 事务 1.1 概念 事务指的是满足 ACID 特性的一组操作，可以通过 Commit 提交一个事务，也可以使用 Rollback 进行回滚。 1.2 ACID 原子性 事务被视为不可分割的最","tags":["Redis","MySQL"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/database-system/"},{"content":"ArrayList 源码分析 1 简介 ...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"ArrayList 源码分析","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"aee8f500f7500e16dcba2d23fa9fc89e","summary":"ArrayList 源码分析 1 简介 底层：Object[]，容量能动态增长。在添加大量元素前，会先调用 ensureCapacity 来增加 ArrayList 的容量，可以减少递增再分配的次数。 ArrayList 继承了 Abs","tags":["Java"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/arraylist-source-code/"},{"content":"实用工具和网址 万能工具箱 CyberC...","hierarchy_lvl0":null,"hierarchy_lvl1":"实用工具和网址","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"c3112aead3b9061170783f5190335735","summary":"实用工具和网址 万能工具箱 CyberChef：https://gchq.github.io/CyberChef/ 小白工具盒：https://w","tags":["实用工具"],"type":null,"url":"https://cuterwrite.top/p/useful-tool/"},{"content":"HashMap 源码分析 1 属性 初始...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"HashMap 源码分析","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"546a7ab5f91882fdad2798b3f7500c31","summary":"HashMap 源码分析 1 属性 初始化容量 static final int DEFAULT_INITIAL_CAPACITY = 1 \u0026lt;\u0026lt; 4; 最大容量 static final int MAXIMUM_CAPACITY = 1 \u0026lt;\u0026lt; 30; 负载因子 static final float DEFAULT_LOAD_FACTOR = 0.75f; 红黑树阈值 static final int TREEIFY_THRESHOLD = 8; 链表阈值 static final int UNTREEIFY_THRESHOLD = 6; 红黑树桶阈值","tags":["Java"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/hashmap/"},{"content":"前端开发知识点-基础篇 1 Cookie...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"前端开发知识点复习-基础篇","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"f4475a196c8cad58465dd53bc758be54","summary":"前端开发知识点-基础篇 1 Cookie、Session、SessionStorage 和 LocalStorage Cookie：服务器提供的一种用于维护会话状态信息的数","tags":["计算机网络"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/web-development-1/"},{"content":"一、操作系统 1、进程与线程的区别 进程...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"计算机基础知识点总结（操作系统+计算机网络）","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"c2a4bfaa2e4be191d042ed0d612da580","summary":"一、操作系统 1、进程与线程的区别 进程是对运行时程序的封装，是系统进行资源调度和分配的的基本单位，实现了操作系统的并发； 线程是进程的子任务，是","tags":["计算机网络","操作系统"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/interview-help/"},{"content":"1、命令返回值 状态回复 OK：成功 P...","hierarchy_lvl0":"综合技术栈","hierarchy_lvl1":"Redis 入门","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"65f2320405748253c4a91da06dc1c392","summary":"1、命令返回值 状态回复 OK：成功 PONG：响应 PING 错误回复：命令不存在或者命令格式有误 Error Unknown command 整数回复： INCR 命令：返回递增后的键值 DBSIZE 命令：返回键的","tags":["Redis"],"type":["综合技术栈"],"url":"https://cuterwrite.top/p/redis-1/"},{"content":"Spring Cloud alibaba...","hierarchy_lvl0":"Spring-Cloud-Alibaba","hierarchy_lvl1":"Spring Cloud Alibaba 笔记","hierarchy_lvl2":"","hierarchy_lvl3":"","id":"7d65c986b0a77b0539ae450e5a86168d","summary":"Spring Cloud alibaba 笔记 SOA 与微服务的区别： SOA 关注的是服务的重用性及解决信息孤岛问题 微服务关注的是解耦，虽然解耦和可重用性从特定的角度来看是一样的，但本质上","tags":["微服务","Java"],"type":["Spring-Cloud-Alibaba","SpringBoot"],"url":"https://cuterwrite.top/p/spring-cloud-alibaba-1/"}]