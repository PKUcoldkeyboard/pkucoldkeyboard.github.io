<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>计算神经科学 on Cuterwrite's Blog</title><link>https://cuterwrite.top/categories/neurocomputing-science/</link><description>Recent content in 计算神经科学 on Cuterwrite's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>cuterwrite</copyright><lastBuildDate>Thu, 02 Nov 2023 00:55:55 +0000</lastBuildDate><atom:link href="https://cuterwrite.top/categories/neurocomputing-science/index.xml" rel="self" type="application/rss+xml"/><item><title>离子通道与 Hudgkin-Huxley 模型</title><link>https://cuterwrite.top/p/ion-channels-and-hudgkin-huxley/</link><pubDate>Thu, 02 Nov 2023 00:55:55 +0000</pubDate><guid>https://cuterwrite.top/p/ion-channels-and-hudgkin-huxley/</guid><description>&lt;img src="https://cloud.cuterwrite.fun/blog/20231102162211-2023-11-02.webp" alt="Featured image of post 离子通道与 Hudgkin-Huxley 模型" />&lt;h1 id="离子通道与-hudgkin-huxley-模型">
&lt;a href="#%e7%a6%bb%e5%ad%90%e9%80%9a%e9%81%93%e4%b8%8e-hudgkin-huxley-%e6%a8%a1%e5%9e%8b" class="header-anchor">#&lt;/a>
离子通道与 Hudgkin-Huxley 模型
&lt;/h1>
&lt;p>从生物物理学的角度来看，动作电位是通过细胞膜中离子通道的电流的结果。在对乌贼的巨型轴突进行的一系列广泛实验中，霍奇金和胡克斯利成功地测量了这些电流，并以微分方程的方式描述了它们的动力学。在转向 Hudgkin-Huxley 方程之前，我们需要补充一些关于离子通道平衡电位的额外知识。&lt;/p>
&lt;h2 id="一平衡电位equilibrium-potential">
&lt;a href="#%e4%b8%80%e5%b9%b3%e8%a1%a1%e7%94%b5%e4%bd%8dequilibrium-potential" class="header-anchor">#&lt;/a>
一、平衡电位（Equilibrium Potential）
&lt;/h2>
&lt;p>神经元和其他细胞一样，被一个膜所包围，该膜将细胞的内部与细胞外空间分开。细胞内的离子浓度与周围液体中的离子浓度不同。浓度的差异产生了一个电位，在神经元动力学中起着重要作用。该小节将对平衡电位给出一个直观的解释。&lt;/p>
&lt;h3 id="1-nernst-电位nernst-potential">
&lt;a href="#1-nernst-%e7%94%b5%e4%bd%8dnernst-potential" class="header-anchor">#&lt;/a>
1. Nernst 电位（Nernst Potential）
&lt;/h3>
&lt;p>根据热力学理论，分子处于能量状态的概率与 Boltzmann 因子成正比，即 $p \propto \exp \left( -E/kT \right )$，其中 $E$ 是分子的能量，$k$ 是 Boltzmann 常数，$T$ 是温度。现在考虑带有电荷 $q$ 的正离子在静电场中。它们在位置 $x$ 的能量为 $E=q u(x)$，其中 $u(x)$ 是 $x$ 处的电势。因此，正离子在位置 $x$ 附近的概率为 $p(x) \propto \exp \left[ -q u(x)/kT \right ] $。对于带有正电荷 $q&amp;gt;0$ 的离子，离子密度在电位低的区域更高。我们用 $n(x)$ 表示点 $x$ 处的离子密度。则点 $x_1$ 处和点 $x_2$ 处的密度之间的关系为：&lt;/p>
&lt;p>$$
\frac{n(x_1)}{n(x_2)} = \exp \left [ -\frac{qu(x_1)-qu(x_2)}{kT} \right ] \tag{1.1}
$$&lt;/p>
&lt;p>因此，电位差 $\Delta u = u(x_1) − u(x_2)$ 引起了离子密度的差异。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231102170347-2023-11-02.webp"
alt="20231102170347-2023-11-02" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 1.1： (a)在热平衡状态下，电场中的正离子分布为：高能态的离子较少，低能态的离子较多。因此，电压差会产生浓度梯度。(b) 类似地，离子浓度的差异会产生电势差。神经元内部的浓度与周围的浓度不同。由此产生的电位称为 **Nernst 电位** 。实线表示细胞膜。离子可以通过间隙传递。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>由于这是关于平衡状态的陈述，反过来也是成立的。离子密度的差异会产生电势差 $\Delta u$ 。我们考虑两个离子浓度分别为 $n_1$ 和 $n_2$ 的区域；参见图 1.1(b)。通过求解公式 (1.1) 得到 $\Delta u$，我们发现，在平衡状态下，浓度差异会产生一个电压。&lt;/p>
&lt;p>$$
\Delta u = \frac{kT}{q} \ln \frac{n_1}{n_2} \tag{1.2}
$$&lt;/p>
&lt;p>该电压又被称为 Nernst 电位（Hille, 2001）。&lt;/p>
&lt;h3 id="2-反转电位reversal-potential">
&lt;a href="#2-%e5%8f%8d%e8%bd%ac%e7%94%b5%e4%bd%8dreversal-potential" class="header-anchor">#&lt;/a>
2. 反转电位（Reversal Potential）
&lt;/h3>
&lt;p>细胞膜由一层薄的脂质双层组成，几乎是一个完美的电绝缘体。然而，在细胞膜中嵌入了特定的蛋白质，它们作为离子门控通道。第一种类型的门控通道是离子泵，第二种是离子通道。离子泵能够主动地将离子从一侧运输到另一侧。因此，细胞内液体中的离子浓度与周围环境不同。例如，哺乳动物神经元内的钠浓度（约为 $10 mM$ ）低于细胞外液体中的钠浓度（约为 $145 mM$ ）。另一方面，细胞内的钾浓度（约为 $140 mM$ ）高于周围环境中的钾浓度（约为 $5 mM$ ）。对于霍奇金和哈克斯利研究的鱿鱼巨大轴突，这些数字略有不同，但基本思想是相同的：细胞外的钠离子比细胞内多，而钾离子则相反。&lt;/p>
&lt;p>让我们暂时专注于钠离子。在平衡状态下，浓度差引起了约为 $+67 mV$ 的 Nernst 电位 $E_{Na}$ 。也就是说，在平衡状态下，细胞内部相对于周围环境具有正电势。细胞内部和周围液体通过离子通道相互联系，钠离子可以从膜的一侧通过到另一侧。如果电压差 $\Delta u$ 小于 Nernst 电势 $E_{Na^{+}}$ 的值，更多的 $Na^+$ 离子会流入细胞，以减小浓度差异。如果电压大于 Nernst 电势，离子会从细胞流出。因此，当电压 $\Delta u$ 通过 $E_{Na}$ 时，电流的方向会反转。因此，$E_{Na}$ 被称为反转电位。&lt;/p>
&lt;p>继续看钾离子，正如上面提到的，钾离子在细胞内的浓度（约为 $140 mM$ ）比细胞外液体（约为 $5 mM$ ）高。钾离子具有单个正电荷 $q = 1.6 × 10^{-19} C$ 。应用 Nernst 公式（1.2），其中玻尔兹曼常数 $k = 1.4 × 10^{-23} J/K$ ，在室温下得到 $E_K ≈ -83 mV$ 。因此，钾离子 $K^{+} 的反转电势是负的。&lt;/p>
&lt;p>到目前为止，我们考虑了钠或钾的存在。在真实的细胞中，这些和其他离子类型同时存在，并对跨膜电压做出贡献。实验发现，细胞膜的静息电位约为 $u_{rest} ≈ 65 mV$ 。由于 $E_K &amp;lt; u_{rest} &amp;lt; E_{Na}$ ，钾离子在静息电位下从细胞流出，而钠离子则流入细胞。在稳态下，主动离子泵平衡这种流动，并通过通道运输与通过通道的离子数量相同的离子返回。$u_{rest}$ 的值由通道中离子流动（膜的渗透性）和主动离子转运（维持浓度差的离子泵的效率）之间的动态平衡决定。&lt;/p>
&lt;h2 id="二hudgkin-huxley-模型">
&lt;a href="#%e4%ba%8chudgkin-huxley-%e6%a8%a1%e5%9e%8b" class="header-anchor">#&lt;/a>
二、Hudgkin-Huxley 模型
&lt;/h2>
&lt;p>霍奇金和哈克斯利（1952）对乌贼的巨型轴突进行了实验，发现了三种不同类型的离子电流，即钠、钾和主要由氯离子组成的泄漏电流。特定的电压依赖性离子通道，一个用于钠，另一个用于钾，控制这些离子通过细胞膜的流动。泄漏电流负责其他未明确描述的通道类型。&lt;/p>
&lt;h3 id="1-模型定义model-definition">
&lt;a href="#1-%e6%a8%a1%e5%9e%8b%e5%ae%9a%e4%b9%89model-definition" class="header-anchor">#&lt;/a>
1. 模型定义（Model Definition）
&lt;/h3>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231102175050-2023-11-02.webp"
alt="20231102175050-2023-11-02" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 2.1： Hodgkin-Huxley 模型示意图。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Hodgkin-Huxley 模型可以通过图 2.1 来理解。半透膜细胞膜将细胞内部与细胞外液体隔开，并起到电容器的作用。如果将输入电流 $I(t)$ 注入细胞，它可能会在电容器上增加进一步的电荷，或者通过细胞膜中的通道泄漏。&lt;/p>
&lt;p>图 2.1 中的每种通道类型都由一个电阻器表示。非特异通道具有泄漏电阻 $R$ ，钠通道具有电阻 $R_{Na}$ ，钾通道具有电阻 $R_K$ 。电阻器图中的对角箭头表示电阻值不固定，而是根据离子通道是否打开或关闭而变化。&lt;/p>
&lt;p>由于通过细胞膜的主动离子转运，细胞内的离子浓度与细胞外液体不同。由离子浓度差产生的 Nernst 电位在图 2.1 中由电池表示。由于每种离子类型的 Nernst 电位不同，分别为钠、钾和非特异第三通道设置了单独的电池，其电池电压分别为 $E_{Na}$ 、$E_K$ 和 $E_L$ 。&lt;/p>
&lt;p>现在让我们将上述电路图转化为数学方程。膜上电荷的守恒意味着施加的电流 $I(t)$ 可以分为充电电流 $I_C$ ，用于充电电容器 $C$ ，以及通过离子通道的其他电流 $I_k$ 。因此，可以写成以下方程：&lt;/p>
&lt;p>$$
I(t) = I_C(t) + \sum_{k} I_k(t) \tag{2.1}
$$&lt;/p>
&lt;p>在标准的 Hodgkin-Huxley 模型中，只有三种类型的通道：一个带有 $Na$ 索引的钠通道，一个带有 $K$ 索引的钾通道，以及一个具有电阻 $R$ 的非特异泄漏通道。根据电容的定义 $C = q / u$ ，可以得到充电电流 $I_C = C\frac{du}{dt}$ 。因此，方程 (2.1) 可以写成：&lt;/p>
&lt;p>$$
C \frac{du}{dt} = I(t) - \sum_{k} I_k(t) \tag{2.2}
$$&lt;/p>
&lt;p>在生物学术语中，$u$ 是膜上的电压，$\sum_{k} I_k(t)$ 是通过细胞膜的离子电流之和。&lt;/p>
&lt;p>如上所述，Hodgkin-Huxley 模型描述了三种类型的通道。所有通道可以通过它们的电阻或等效地通过它们的电导来表征。泄漏通道由电压无关的电导 $g_L=1/R$ 来描述。由于 $u$ 是细胞膜上的总电压，$E_L$ 是电池的电压，在图 2.1 中泄漏电阻器的电压为 $u - E_L$ 。根据欧姆定律，我们得到泄漏电流 $I_L = g_L (u - E_L)$ 。&lt;/p>
&lt;p>其他离子通道的数学模型类似，只是它们的电导是电压和时间依赖的。如果所有通道都打开，它们分别以最大电导率 $g_{Na}$ 或 $g_K$ 发射电流。然而，通常情况下，一些通道被阻断。霍奇金和哈克斯利的突破是，他们成功地测量了通道的有效电阻如何随着时间和电压的变化而变化。此外，他们还提出了对其观察结果的数学描述。具体来说，他们引入了额外的门控变量 $m$ , $n$ 和 $h$ 来模拟模拟通道在给定时间点开放的概率。例如，钠通道的有效电导被建模为 $1 / R_{Na} = g_{Na} \cdot m^3 h$ ，其中 $m$ 描述通道的激活（开放），$h$ 描述通道的失活（阻塞）。钾的电导率为 $1 / R_K = g_K \cdot n^4$ ，其中 $n$ 描述通道的激活。&lt;/p>
&lt;p>总的来说，霍奇金和哈克斯利将公式 (2.2) 右边的三个离子电流写成：&lt;/p>
&lt;p>$$
\sum_{k} I_k(t) = g_{Na} \cdot m^3 h \cdot (u - E_{Na}) + g_K \cdot n^4 \cdot (u - E_K) + g_L \cdot (u - E_L) \tag{2.3}
$$&lt;/p>
&lt;p>其中参数 $E_{Na}$ , $E_K$ , 和 $E_L$ 是反转电位。&lt;/p>
&lt;p>三个门控变量 $m$ , $n$ 和 $h$ 根据以下形式的微分方程变化：&lt;/p>
&lt;p>$$
\dot{x}=-\frac{1}{\tau_x (u)}\left [ x-x_0(u)\right ] \tag{2.4}
$$&lt;/p>
&lt;p>其中，$\dot{x} = \frac{dx}{dt}$ ，其中 $x$ 表示 $m$, $n$ 或者 $h$ 。公式 （2.4） 的解释很简单：对于一个固定的电压 $u$ ，变量 $x$ 以时间常数 $\tau_x(u)$ 逼近目标值 $x_0(u)$ 。目标值 $x_0(u)$ 和时间常数 $\tau_x(u)$ 对电压的依赖关系分别如图 2.2 (a), (b) 所示。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231102185532-2023-11-02.webp"
alt="20231102185532-2023-11-02" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 2.2 ： Hodgkin-Huxley 模型。(a) 门控变量 $m$, $n$, $h$ 的平衡函数。(b)与电压有关的时间常数，静息电位为 $u=-65mV$ （箭头），参数由表 2.1 给出。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231102185758-2023-11-02.webp"
alt="20231102185758-2023-11-02" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>表 2.1 ：在大脑皮层上的锥体神经元上拟合的 Hodgkin-Huxley 方程的参数。$n$ 和 $m$ 的参数由 Zach Mainen（Mainen et al., 1995）根据 Huguenard 等人（1988）报告的实验进行拟合，$h$ 的参数由 Richard Naud 根据 Hamill 等人（1991）报告的实验进行拟合。电压以 $mV$ 为单位，膜电容为 $C = 1 \mu F/ cm^2$ 。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>图 2.2 中绘制的函数形式，以及公式（2.3）中的最大电导和反转电位，是霍奇金和哈克斯利根据经验推导出来的。&lt;/p>
&lt;p>实验者通过向细胞注入适当的电流来保持细胞膜上的电压在所需的值上。在实验中，假设实验者在 $t&amp;lt;t_0$ 时将细胞保持在静息电位 $u_0 =-65mV$ ，并且在 $t=t_0$ 时将电压切换到一个新值 $u_1$ 。对于 $t &amp;gt; t_0$ ，通过对微分方程（2.4）进行积分，可以得到以下动力学方程：&lt;/p>
&lt;p>$$
\begin{aligned}
&amp;amp; m(t)=m_0(u_1) + [m_0(u_0)-m_0(u_1)] \exp \left[ -\frac{t-t_0}{\tau_m(u_1)} \right ] ,\\
&amp;amp; h(t)=h_0(u_1) + [h_0(u_0)-h_0(u_1)] \exp \left[ -\frac{t-t_0}{\tau_h(u_1)} \right ] ,
\end{aligned}
\tag{2.5}
$$&lt;/p>
&lt;p>其中 $m(t)$ 和 $h(t)$ 分别表示钠通道和钾通道的激活和失活状态。基于给定的函数 $m_0(u)$ 、$h_0(u)$ 、$\tau_m(u)$ 和 $\tau_h(u)$ 的模型，可以预测在 $t &amp;gt; t_0$ 时电压变化引起的钠电流 $I_{Na}(t)=g_{Na} [m(t)^3] h(t) (u_1 - E_{Na})$ 和钾电流 $I_K(t)=g_K [n(t)^4] (u_1 - E_K)$ 。&lt;/p>
&lt;p>而 $n(t)$ 的表达式为：&lt;/p>
&lt;p>$$
n(t)=n_0(u_1) + [n_0(u_0)-n_0(u_1)] \exp \left[ -\frac{t-t_0}{\tau_n(u_1)} \right ] \tag{2.6}
$$&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231102222844-2023-11-02.webp"
alt="20231102222844-2023-11-02" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 2.3 ：Hodgkin 和 Huxley 绘制的钾离子电导率变化原始测量曲线和公式拟合曲线。施加 $25 mV$ 的电压切换后，回到静息电位后，钾的电导率（圆圈）的测量时间过程。拟合实线是基于公式（2.6）的。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>霍奇金和哈克斯利使用方程（2.4）和（2.5）反过来进行研究。他们在使用适当的药物阻断钠通道后，施加电压变化并测量钾电流的时间变化。将记录的电流除以驱动电位 $(u_1 - E_K)$ 可以得到时间相关的电导率 $g_K [ n(t)^4]$ (图 2.3 ）。使用方程（2.6），霍奇金和哈克斯利推导出了钾通道的 $n_0(u_1)$ 和 $τ_n(u_1)$ 的值，以及 $n^4(t)$ 中的指数 4。通过对不同的 $u_1$ 值重复实验，可以得到 $n_0(u)$ 和 $τ_n(u)$ 的实验曲线。&lt;/p>
&lt;p>变量 $m$ 被称为激活变量。为了理解这个术语，我们注意到从图 2.2 可以看出，在神经元的静息电位 $u = -65 mV$ 时，$m_0(u)$ 的值接近于零。因此，在静息状态下，通过通道的钠电流 $I_{Na} = g_{Na} m^3 h(u - E_{Na})$ 为零。换句话说，钠通道是关闭的。&lt;/p>
&lt;p>当膜电位显著增加超过静息电位时，门控变量 $m$ 增加到其新值 $m_0(u)$ 。只要 $h$ 不变，钠电流就会增加，门打开。因此，变量 $m$ “激活”了通道。如果在电压恢复到静息状态后，$m$ 衰减回零，就被称为“去激活”。类似地，关于失活变量 $h$ 的术语也是类似的。在静息状态下，$h$ 有一个较大的正值。如果电压增加到超过 $-40 mV$ 的值，$h$ 接近一个接近静息状态的新值 $h_0(u)$ 。因此，通道通过一个由 $\tau_h(u)$ 给出的时间常数“失活”（阻塞）。如果电压返回到零，$h$ 增加，使得通道经历“去失活”。这听起来像是一种棘手的词汇，但事实证明，将一个去激活的通道（$m$ 接近零，$h$ 接近 1）与一个失活的通道（$h$ 接近零）区分开来是有用的。&lt;/p>
&lt;h3 id="2-随机通道的打开stochastic-channel-opening">
&lt;a href="#2-%e9%9a%8f%e6%9c%ba%e9%80%9a%e9%81%93%e7%9a%84%e6%89%93%e5%bc%80stochastic-channel-opening" class="header-anchor">#&lt;/a>
2. 随机通道的打开（Stochastic Channel Opening）
&lt;/h3>
&lt;p>首先，离子通道的数量在一个细胞膜上是有限的，而且每个离子通道的开启和关闭是随机的。因此，当实验者记录通过细胞膜的电流时，他不会发现测量变量随时间平滑可靠地演变，而是会发现电流高度波动，每次重复实验时看起来都不同。这就是离子通道的随机性（如图 2.4 所示）。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231102224048-2023-11-02.webp"
alt="20231102224048-2023-11-02" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 2.4 ： 随机通道激活现象。在实验中，当施加一个电压阶跃到细胞膜上时，通过细胞膜的电流会呈现阶梯状变化，并且在每次试验中都有所不同（如顶部的连续轨迹所示）。对多次试验进行平均后，得到的结果是底部的轨迹。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>然而，Hodgkin-Huxley 模型是用确定性方程描述离子通道的开启和关闭的。这些方程涉及的变量包括 $m$ ，$h$ 和 $n$ ，它们对应的是通过一个假设的、包含无限数量离子通道的极大细胞膜的电流密度，或者说是通过一小片细胞膜的电流，但是这个电流是在多次重复同一实验后得到的平均值。这就是 $Hodgkin-Huxley$ 模型的局限性，因为它忽略了离子通道的随机性。不过可以通过向模型中添加适当的噪声来包含随机性。这种噪声可以模拟离子通道开启和关闭的随机性，从而使模型更准确地描述神经元的动力学行为。&lt;/p>
&lt;p>使用以电压为自变量的转换速率 $\alpha$ 和 $\beta$ 来描述每种通道类型的激活和失活动力学，公式如下：&lt;/p>
&lt;p>$$
\begin{aligned}
\dot{m}= &amp;amp;\alpha_m (u) (1-m) - \beta_m (u) m ,\\
\dot{n}= &amp;amp;\alpha_n (u) (1-n) - \beta_n (u) n ,\\
\dot{h}= &amp;amp;\alpha_h (u) (1-h) - \beta_h (u) h , \\
\end{aligned}
\tag{2.7}
$$&lt;/p>
&lt;p>公式 （2.4）和 （2.7）是等价的。逼近值 $x_0(u)$ 和时间常数 $\tau_x(u)$ 由变换 $x_0(u)=\alpha_x(u)/[\alpha_x(u)+\beta_x(u)]$ 和 $\tau_x(u)=1/[\alpha_x(u)+\beta_x(u)]$ 给出。表 2.1 中的第二个表格给出了各种以 $u$ 为自变量的经验拟合函数 $\alpha$ 和 $\beta$ ，用于生成图 2.2 中的曲线。&lt;/p>
&lt;p>方程（2.7）是化学中常用的方程，用于描述具有速率常数 $α$ 和 $β$ 的激活过程的随机动力学。我们可以将这个过程解释为具有电压依赖的转换速率的两个状态之间的分子开关。例如，激活变量 $n$ 可以解释为找到一个开放的钾通道的概率。因此，在一个具有 $K$ 个离子通道的细胞膜中，预计有 $k \approx (1 - n)K$ 个通道是关闭的。我们可以将 $\alpha_n(u) \Delta t$ 解释为在短时间区间 $\Delta t$ 内，暂时关闭的通道中有一个切换到开放状态的概率。&lt;/p>
&lt;h3 id="3-hudgkin-huxley-模型的动力学dynamics-of-hudgkin-huxley-model">
&lt;a href="#3-hudgkin-huxley-%e6%a8%a1%e5%9e%8b%e7%9a%84%e5%8a%a8%e5%8a%9b%e5%ad%a6dynamics-of-hudgkin-huxley-model" class="header-anchor">#&lt;/a>
3. Hudgkin-Huxley 模型的动力学（Dynamics of Hudgkin-Huxley Model）
&lt;/h3>
&lt;p>不同类型的输入被依次考虑，包括脉冲输入、恒定输入、阶跃电流输入和时间依赖输入。选择这些输入场景是为了直观理解 Hodgkin-Huxley 模型的动力学特性。Hodgkin-Huxley 模型最重要的特性是能够产生动作电位。在图 2.5(a) 中，一个持续 $1ms$ 的短脉冲电流在 $t=1ms$ 时施加，引发了一个动作电位。这个脉冲的幅度接近 $100mV$ ，半峰宽约为 $2.5ms$ 。在动作电位之后，膜电位下降到静息电位以下，再慢慢回到静息电位值 $-65mV$ 。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231102225930-2023-11-02.webp"
alt="20231102225930-2023-11-02" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 2.5 ： (a)动作电位。Hodgkin-Huxley 模型受到 $t=1ms$ 和 $t=2ms$ 之间的短而强的电流脉冲的刺激。对于 $t&amp;gt;2ms$ 的膜电位 $u(t)$ 的时间变化显示了动作电位（正峰值），随后是相对不应期，此时电位低于静息电位 $u_{rest}$（虚线）。右侧面板显示了 $t=2ms$ 和 $t=5ms$ 之间动作电位的放大视图。（b）门控变量 $m，h，n$ 的变化揭示了动作电位是如何通过钠通道和钾通道介导的。（c）钠电流 $I_{Na}$ 取决于变量 $m$ 和 $h$ ，在动作电位的上升阶段有一个脉冲。钾电流 $I_K$ 受变量 $n$ 控制，并与 $I_{Na}$ 相比有一定的延迟开始。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;ul>
&lt;li>脉冲产生过程中离子通道的动力学（Ion channel dynamics during spike generation）
为了理解动作电位生成的生物物理学基础，我们回到图 2.2(a) 。我们发现 $m_0$ 和 $n_0$ 随着 $u$ 的增加而增加，而 $h_0$ 则减少。因此，如果某些外部输入导致膜电压上升，由于 $m$ 的增加，钠通道的电导增加。结果，正钠离子流入细胞，进一步提高膜电位。如果这种正反馈足够大，就会引发动作电位。当膜电位接近钠电流的反转电位 $E_{Na}$ 时，这种爆发性增加自然停止。&lt;/li>
&lt;/ul>
&lt;p>在高 $u$ 值下，由于因子 $h$ 的作用，钠电导缓慢关闭。如图 2.2(b) 所示，时间常数 $\tau_h$ 始终大于 $\tau_m$ 。因此，使通道失活的变量 $h$ 对电压增加的反应比激活通道的变量 $m$ 慢。在类似的较慢时间尺度上，钾电流在图 2.5(c) 中开始。由于它是向外的电流，它降低了电位。钠和钾电流的整体效应是一个短暂的动作电位，随后是负超调；(负超调，又被称为超极化脉冲后电位，是由于 $h$ 变量引起的钠通道的缓慢去失活过程所导致）。&lt;/p>
&lt;p>Hudgkin-Huxley 模型的动力学覆盖的知识比较多，主要概念如下：&lt;/p>
&lt;ul>
&lt;li>平均发射率与增益函数（Mean Firing Rate and Gain Function）&lt;/li>
&lt;li>时间依赖的输入刺激 （Stimulations by Time-Dependent Input）&lt;/li>
&lt;li>发射阈值（Firing Threshold）&lt;/li>
&lt;li>不应性（Refractoriness）&lt;/li>
&lt;li>阻尼振荡与瞬时脉冲（Damped Oscillations and transient spiking）&lt;/li>
&lt;/ul>
&lt;p>这里就不继续介绍了，有兴趣的可以参考原文。&lt;/p>
&lt;h2 id="参考文献">
&lt;a href="#%e5%8f%82%e8%80%83%e6%96%87%e7%8c%ae" class="header-anchor">#&lt;/a>
参考文献
&lt;/h2>
&lt;ul>
&lt;li>[1] Gerstner, Wulfram, Werner M. Kistler, Richard Naud, and Liam Paninski. Neuronal dynamics: from single neurons to networks and models of cognition. Cambridge university press, 2014.&lt;/li>
&lt;/ul></description></item><item><title>脉冲神经网络入门：神经元与数学</title><link>https://cuterwrite.top/p/introduction-neuron-math/</link><pubDate>Wed, 01 Nov 2023 00:55:55 +0000</pubDate><guid>https://cuterwrite.top/p/introduction-neuron-math/</guid><description>&lt;img src="https://cloud.cuterwrite.fun/blog/2bb88c98-90f9-4308-abcf-493b7e507baa-2023-09-12.webp" alt="Featured image of post 脉冲神经网络入门：神经元与数学" />&lt;h1 id="脉冲神经网络入门神经元与数学">
&lt;a href="#%e8%84%89%e5%86%b2%e7%a5%9e%e7%bb%8f%e7%bd%91%e7%bb%9c%e5%85%a5%e9%97%a8%e7%a5%9e%e7%bb%8f%e5%85%83%e4%b8%8e%e6%95%b0%e5%ad%a6" class="header-anchor">#&lt;/a>
脉冲神经网络入门：神经元与数学
&lt;/h1>
&lt;h2 id="一神经元系统的结构">
&lt;a href="#%e4%b8%80%e7%a5%9e%e7%bb%8f%e5%85%83%e7%b3%bb%e7%bb%9f%e7%9a%84%e7%bb%93%e6%9e%84" class="header-anchor">#&lt;/a>
一、神经元系统的结构
&lt;/h2>
&lt;p>生物神经元是一种高度特化的细胞，其结构和功能包含很多因素，其中神经元的几何形态特征和电学物理特性是两个重要方面。几何形态特征主要指神经元的空间结构，而电学物理特性包含神经元不同的动作点位发放模式。生物神经系统内有两类细胞：神经元细胞和神经胶质细胞，前者担负着信息处理的主要任务，而后者对前者起支持作用。神经元细胞的几何形态结构和电学物理特性是生物神经系统进行信息处理的基础。所谓的神经胶质细胞，它们是脑组织能量供应和结构稳定所需要的。由于胶质细胞不直接参与信息处理，本文将不再进一步讨论它们。本文还将忽略一些罕见的神经元亚型，如哺乳动物视网膜上的非脉冲神经元。本文只专注于脉冲神经元。&lt;/p>
&lt;h3 id="1-理想的脉冲神经元-ideal-spike-neuron">
&lt;a href="#1-%e7%90%86%e6%83%b3%e7%9a%84%e8%84%89%e5%86%b2%e7%a5%9e%e7%bb%8f%e5%85%83-ideal-spike-neuron" class="header-anchor">#&lt;/a>
1. 理想的脉冲神经元 (ideal spike neuron)
&lt;/h3>
&lt;p>一个典型的神经元可以分为三个功能不同的部分，称为树突（dendrite）、细胞体（soma）和轴突（axon）。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20230912222755-2023-09-12.webp"
alt="20230912222755-2023-09-12" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 1.1：(a) Ramón y Cajal 于 1899 年绘制的神经元示意图。树突、体细胞和轴突可以被清楚地区分出来。图片显示了一个神经元动作电位的例子。动作电位是一个持续时间为 $1ms$ 的短电压脉冲，振幅约为 $100mv$ 。(b) 从突触前神经元 $j$ 到突触后神经元 $i$ 的信号传输。突触由虚线圈标记。右下端的轴突通向其它神经元。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;ul>
&lt;li>树突：指从神经元细胞体内向外伸出的许多较短的分支，它们充当着神经元的&lt;strong>输入端&lt;/strong>，接收来自其它神经元的神经冲动并传递给细胞体；&lt;/li>
&lt;li>细胞体：神经元的核心，由细胞核、细胞质和细胞膜等组成，&lt;strong>负责处理接收到的信号&lt;/strong>；&lt;/li>
&lt;li>轴突：指由神经元细胞体向外伸出的一条最长的分支，它是管状纤维组织，充当神经元的&lt;strong>输出端&lt;/strong>，再轴突末端有很多神经末梢，它们向外发出神经冲动。&lt;/li>
&lt;/ul>
&lt;p>神经元的轴突末梢经过多次分支，最后每一个小支的末端膨大呈杯状或球状，称为突触小体。这些突触小体可以与多个神经元的细胞体或树突相接触，形成神经元之间连接的突触（synapse）。通常把发送神经元成为突触前神经元（presynaptic neuron），把接收神经元称为突触后神经元（postsynaptic neuron）。&lt;/p>
&lt;h3 id="2-脉冲序列-spike-train">
&lt;a href="#2-%e8%84%89%e5%86%b2%e5%ba%8f%e5%88%97-spike-train" class="header-anchor">#&lt;/a>
2. 脉冲序列 (spike train)
&lt;/h3>
&lt;p>生物神经系统在内外刺激作用下，使得神经元按照一定的时间间隔产生一系列的活动电位，称为脉冲序列 (spike train)。神经元信号由短的电脉冲组成，可以通过在神经元的体部或靠近体部或轴突的位置放置一个精细的电极来观察，如下图所示，脉冲（或活动电位），其振幅为 100 毫伏，通常持续时间为 1~2 ms。脉冲的形式不会因为活动电位沿轴突传播而改变。神经元发送的单个活动电位或脉冲是信号传递的基本单元，因为所有脉冲的波形都是相似的，所以活动电位的形状不会携带任何信息，而传递有用神经信息的是&lt;strong>脉冲的发放时间和频率&lt;/strong>。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20230912224451-2023-09-12.webp"
alt="20230912224451-2023-09-12" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 1.2：动作电位是刻板事件。在最大电压时间内排列的膜电位记录显示动作电位形状的变化很小。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>脉冲序列中的活动电位通常是很好地分开的。即使有非常强的输入，也不可能在第一次脉冲期间紧接着激发第二次脉冲。两个脉冲之间的最小距离定义了神经元的绝对不应期（absolute refractory period）—— 大致在活动电位的复极化阶段（repolarization phase），无论用任何强的刺激都不能再引起活动电位。&lt;/p>
&lt;h3 id="3-突触-synapse">
&lt;a href="#3-%e7%aa%81%e8%a7%a6-synapse" class="header-anchor">#&lt;/a>
3. 突触 (synapse)
&lt;/h3>
&lt;p>突触前神经元的轴突与突触后细胞的树突（或体细胞）接触的部位是突触。脊椎动物大脑中最常见的突触类型是化学突触。在化学突触处，轴突终端非常接近突触后神经元，在突触前和突触后细胞膜之间只留下一个微小的间隙。这就是所谓的突触间隙（synaptic cleft）。当一个活动电位到达突触时，它触发了一个复杂的生化处理步骤链，导致神经递质从突触前末端释放到突触间隙中。一旦递质分子到达突触后一侧，它们将被突触后细胞膜上的专门受体检测到，并导致（直接或通过生化信号链）打开特定通道，导致细胞外液体中的离子流入细胞。离子的涌入反过来又改变了突触后部位的膜电位，因此，最后，化学信号被转化为电反应。从突触前神经元传入的脉冲信号引起突触后神经元膜电位发生的变化称为突触后电位（postsynaptic potential）。&lt;/p>
&lt;p>除了化学突触之外，神经元还可以通过电突触连接，称为间隙连接（gap junctions）。特化膜蛋白在两个神经元之间形成直接的电连接。关于间隙连接的功能方面当前所知不多，但它们被认为参与了神经元的同步。&lt;/p>
&lt;h2 id="二神经动力学的要素">
&lt;a href="#%e4%ba%8c%e7%a5%9e%e7%bb%8f%e5%8a%a8%e5%8a%9b%e5%ad%a6%e7%9a%84%e8%a6%81%e7%b4%a0" class="header-anchor">#&lt;/a>
二、神经动力学的要素
&lt;/h2>
&lt;p>脉冲对突触后神经元的影响可以用细胞内电极来记录，该电极测量细胞内部和其周围环境之间的电位差 $u(t)$ 。这个电位差被称为膜电位。在没有任何输入的情况下，神经元处于静息状态，对应一个恒定的膜电位 $u_{rest}$，称为静息电位（resting potential），一般在 $-80\sim -40mV$ （当以细胞外的电位为 0 ）。当神经元受到外界刺激，突触后电位的总和超过某一阈值时，神经元产生一个不衰减的沿神经纤维传递的神经冲动，即活动电位或脉冲。活动电位的动态变化过程包含一个迅速的去极化正向电位变化和缓慢的复极化负向电位变化。活动电位的另一特征是电位的极性在峰电位顶端倒转，细胞内由静息时的负电位变为正电位，这一过程称为超射。神经元活动电位的产生会导致局部的兴奋性发生一系列的变化。大致在活动电位的复极化阶段（repolarization phase），无论用任何强的刺激都不能再引起活动电位，这个阶段称为绝对不应期（absolute refractory period）；在随后的短时间内，活动电位进入超极化阶段（hyperpolarization phase），用比原来强的刺激方能引起活动电位，而且反应幅度还会小一些，这个阶段称为相对不应期（relative refractory period）。神经元对信号的传递方式在很大程度上与神经元的电学特性有关。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20230913004838-2023-09-13.webp"
alt="20230913004838-2023-09-13" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 2.1：膜电位在绝对不应期和相对不应期的变化。在绝对不应期，神经元不能再次激发。在相对不应期，神经元可以激发，但需要更强的刺激。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="1-突触后电位postsynaptic-potential">
&lt;a href="#1-%e7%aa%81%e8%a7%a6%e5%90%8e%e7%94%b5%e4%bd%8dpostsynaptic-potential" class="header-anchor">#&lt;/a>
1. 突触后电位（postsynaptic potential）
&lt;/h3>
&lt;p>从突触前神经元传入的脉冲信号引起突触后神经元膜电位发生的变化称为突触后电位（postsynaptic potential），具有局部电位的性质。一个神经元通常有许多突触，其中有些是兴奋性的，有些是抑制性的。对于从突触前神经元传来的多个脉冲，由于突触类型的不同，突触后电位可分为兴奋性和抑制性两类。兴奋性突触使突触后神经元的膜去极化，产生正的突触后电位，称为兴奋性突触后电位（excitatory postsynaptic potential，EPSP）。EPSP 在传入脉冲到达突触后神经元 $0.3\sim 0.5ms$ 之后产生，它有一个较快的上升过程和缓慢的指数衰减过程，电位总共持续 $10\sim 20ms$ 。抑制性突触使突触后神经元的膜超极化，产生负的突触后电位，称为抑制性突触后电位（inhibitory postsynapticpotential，IPSP），IPSP 到达峰值时间和 EPSP 相似。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20230913005342-2023-09-13.webp"
alt="20230913005342-2023-09-13" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 2.2：(a)兴奋性突触后电位（EPSP）; (b)抑制性突触后电位（IPSP）。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>用数学术语规范化，那么研究神经元 $i$ 的膜电位随时间变化的函数 $u_i(t)$ 。在输入脉冲到达之前，有 $u_i(t)=u_{rest}\ (t=0)$ 。对于 $t&amp;gt;0$ ，在电极上看到神经元 $i$ 的反应如下：&lt;/p>
&lt;p>$$
u_i(t)-u_{rest}=: \varepsilon_{ij}(t) \tag{2.1}
$$&lt;/p>
&lt;h3 id="2-发射阈值与活动电位firing-threshold-and-action-potential">
&lt;a href="#2-%e5%8f%91%e5%b0%84%e9%98%88%e5%80%bc%e4%b8%8e%e6%b4%bb%e5%8a%a8%e7%94%b5%e4%bd%8dfiring-threshold-and-action-potential" class="header-anchor">#&lt;/a>
2. 发射阈值与活动电位（firing threshold and action potential）
&lt;/h3>
&lt;p>考虑两个突触前神经元 $j=1,2$ ，它们都向突触后神经元 $i$ 发送脉冲。神经元 $j=1$ 在时刻 $t_1^{(1)}, t_2^{(2)}, \cdots$ 发送脉冲，神经元 $j=2$ 也在时刻 $t_1^{(1)}, t_2^{(2)}, \cdots$ 发送脉冲。每个脉冲分别引起一个突触后电位 $\varepsilon_{i1}$ 或 $\varepsilon_{i2}$ 。只要只有少数的输入脉冲，电位的总变化大小约是各个 PSP 的总和：&lt;/p>
&lt;p>$$
u_i(t)=\sum_{j}\sum_{f} \varepsilon_{ij}(t-t_j^{f}) + u_{rest} \tag{2.2}
$$&lt;/p>
&lt;p>即，膜电位对输入脉冲的反应是线性的。&lt;/p>
&lt;p>另一方面，如果在很短的时间间隔内有太多的输入脉冲到达，线性就会被打破。一旦膜电位达到一个临界值 $\vartheta$ ，它的曲线就会显示出与 PSP 的简单求和完全不同的行为：膜电位表现出类似脉冲的偏移，振幅约为 $100 mV$ 。这个短电压脉冲将沿着神经元轴突与其他神经元的突触传播。在脉冲之后，膜电位并不直接回到静止电位，而是在许多神经元类型中通过低于静止值的超极化阶段。&lt;/p>
&lt;p>单个 EPSP 的振幅在 $1 mV$ 的范围内。脉冲初始临界值比静息电位高约 $20$ 至 $30 mV$ 。因此在大多数神经元中，如下图所示的四个脉冲是不足以触发一个活动电位的。相反地，需要大约 $20\sim 50$ 个突触前脉冲在很短的时间窗口内到达才能触发一个突触后活动电位。这个时间窗口称为发射阈值（firing threshold），它是神经元的一个重要参数。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20230913012304-2023-09-13.webp"
alt="20230913012304-2023-09-13" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 2.3：来自第二个突触前神经元 $j=2$ 的输入脉冲在来自神经元 $j=1$ 的尖峰后不久到达，导致第二个突触后电位增加到了第一个上。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="三integrade-and-fire-模型">
&lt;a href="#%e4%b8%89integrade-and-fire-%e6%a8%a1%e5%9e%8b" class="header-anchor">#&lt;/a>
三、Integrade-and-fire 模型
&lt;/h2>
&lt;p>神经元动力学可以被视为一个整合的过程，与出发活动电位超过某个临界电压的机制相结合。事实上，在实验中，发射时间通常被定义为膜电位从下往上达到某个阈值的时刻。为了建立一个神经元动力学的现实模型，我们通过阈值 $\vartheta$ 来描述神经元的发射阈值。如果电压 $u_i(t)$ （包含所有输入的总效应）从下往上到达 $\vartheta$ ，我们就说神经元会发射一个脉冲。跨越阈值的时刻定义了发射时间 $t_i^f$ 。&lt;/p>
&lt;p>该模型利用了一个事实，即一个而给定的神经元的活动电位总是具有大致相同的形式。如果一个活动电位的形状总是相同的，那么这个形状就不能用来传递信息；相反，信息包含在脉冲的存在或不存在中。因此活动电位被简化为“发生在一个精确的时刻的事件”。&lt;/p>
&lt;p>将活动电位描述为事件的神经元模型被称为 Intergrate-and-fire 模型。该模型没有尝试描述活动电位的形状。Integrade-and-fire 模型有两个独立的组成部分，都是定义其动力学所必须的：&lt;/p>
&lt;ol>
&lt;li>描述膜电位 $u_i(t)$ 变化的方程；&lt;/li>
&lt;li>产生脉冲的机制。&lt;/li>
&lt;/ol>
&lt;p>在下文中将介绍最简单的 Intergrade-and-fire 类模型：Leaky Integrade-and-fire 模型，该模型有两个独立的组成部分：&lt;/p>
&lt;ol>
&lt;li>描述膜电位变化的线性微分方程；&lt;/li>
&lt;li>脉冲发射的阈值。&lt;/li>
&lt;/ol>
&lt;h3 id="1-输入的整合input-integration">
&lt;a href="#1-%e8%be%93%e5%85%a5%e7%9a%84%e6%95%b4%e5%90%88input-integration" class="header-anchor">#&lt;/a>
1. 输入的整合（input integration）
&lt;/h3>
&lt;p>变量 $u_i$ 描述了神经元 $i$ 的膜电位的瞬时值。在没有任何输入的情况下，电位处于静息值 $u_{rest}$ 。如果实验者向神经元 $i$ 注入电流 $I(t)$ ，或神经元 $i$ 接收其它神经元的突触输入，电位 $u_i$ 将被偏离其静止值。&lt;/p>
&lt;p>为了得到一个将瞬时电压 $u_i(t) - u_{rest}$ 与输入电流 $I(t)$ 联系起来的方程，我们使用电学理论中的基本定律。一个神经元被细胞膜所包围，这是一个相当好的绝缘体。如果一个短的电流脉冲 $I(t)$ 被注入到神经元中，额外的电荷 $q=\int I(t&amp;rsquo;)\ dt&amp;rsquo;$ 必须去到某个地方：给细胞膜充电（如下图所示）。因此，细胞膜的作用就相当于一个容量为 $C$ 的电容器。因为绝缘体并不完美，电荷会随着时间的推移慢慢通过细胞膜泄露。因此，细胞膜可以用一个有限的泄露电阻 $R$ 表示。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20230914213909-2023-09-14.webp"
alt="20230914213909-2023-09-14" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 3.1：神经元的电学特性：被动膜。(a)由细胞膜（大圈）包围的神经元接收一个（正）输入电流 $I(t)$ ，增加细胞内的电荷。细胞膜的作用就像一个与电阻并联的电容器，与电位为 $u_{rest}$ 的电池并联。(b)细胞膜对具有平滑电压轨迹的阶梯电流的反应。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>代表 Leaky Integrate-and-fire 模型的基本电路由一个电容 $C$ 和一个由电流 $I(t)$ 驱动的电阻 $R$ 并联组成。如果驱动电流 $I(t)$ 为零，则电容器两端的电压由电池电压 $u_{rest}$ 给出。&lt;/p>
&lt;p>为了分析电路，我们使用电流守恒定律，将驱动电流分成两部分。&lt;/p>
&lt;p>$$
I(t) = I_{R} + I_{C}. \tag{3.1}
$$&lt;/p>
&lt;p>第一个是通过线性电阻 $R$ 的阻性电流 $I_R$ ，根据欧姆定律可以计算出 $I_R=\frac{u_R}{R}$，其中 $u_R=u-u_{rest}$ 是电阻两端的电压。第二个分量 $I_C$ 给电容器 $C$ 充电。根据电容的定义 $C=\frac{q}{u}$ ，其中 $q$ 为电荷，$u$ 为电压，我们可以得出电容电流 $I_C=\frac{dq}{dt}=C \frac{du}{dt}$ ，即：&lt;/p>
&lt;p>$$
I(t)=\frac{u(t)-u_{rest}}{R}+C \frac{du}{dt}. \tag{3.2}
$$&lt;/p>
&lt;p>等式两边乘以 $R$ ，并引入时间常数 $\tau_{m}=RC$ ， 则标准形式为：&lt;/p>
&lt;p>$$
\tau_m \frac{du}{dt} = -[u(t)-u_{rest}]+RI(t). \tag{3.3}
$$&lt;/p>
&lt;p>其中，$u$ 是膜电位，$\tau_m$ 是神经元的膜时间常数。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231031161758-2023-10-31.webp"
alt="20231031161758-2023-10-31" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 3.2：被动膜上的短脉冲和总充电量。由短电流脉冲 $I(t)$ 驱动的漏电整合器的电压响应振幅（底部）（顶部）只取决于总电荷 $q = \int I(t) \\ dt$ ，而不取决于电流脉冲的高度。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>从数学的角度来看，公式 (3.3) 是一个线性微分方程。从电气工程师的角度来看，它是一个漏电整合器或 $RC$ 电路的方程，其中电阻 $R$ 和电容 $C$ 是平行排列的。从神经科学家的角度来看，它被称为被动膜的方程。&lt;/p>
&lt;p>方程 (3.3) 的解是什么？我们假设，无论出于什么原因，在时刻 $t=0$ 时，膜电位的值为 $u_{rest} + \Delta u$ 。在 $t&amp;gt;0$ 时，输入电流 $I(t)$ 将消失变为零。直观地讲，我们期望，如果我们等待足够长的时间，膜电位会放松到静息电位 $u_{rest}$ 。事实上，具有初始条件 $u(t_0)=u_{rest} + \Delta u$ 的方程 (3.3) 的解是：&lt;/p>
&lt;p>$$
u(t)-u_{rest}=\Delta u \exp \left ( -\frac{t-t_0}{\tau_m} \right)\ \mathrm{for}\ t&amp;gt;0. \tag{3.4}
$$&lt;/p>
&lt;p>因此，在没有输入的情况下，膜电位以指数形式衰减静息电位。膜时间常数 $\tau_m=RC$ 是衰减的特征时间。对于一个典型的神经元来说，它在 $10ms$ 的范围内，因此与 $1ms$ 数量级的脉冲持续时间相比相当长。解 (3.4) 的有效性可以通过在方程两边取导数来检查。由于它是没有输入时的解，它又被称为自由解（free solution）。&lt;/p>
&lt;h3 id="2-脉冲输入pulse-input">
&lt;a href="#2-%e8%84%89%e5%86%b2%e8%be%93%e5%85%a5pulse-input" class="header-anchor">#&lt;/a>
2. 脉冲输入（pulse input）
&lt;/h3>
&lt;p>在我们继续定义 Intergrate-and-Fire 模型及其变体之前，让我们研究一下由公式 (3.3) 定义的被动膜的动力学。假设被动膜受到恒定输入电流 $I(t)=I_0$ 的刺激。该电流从 $t=0$ 开始，持续到 $t=Delta$ 。为了简单起见，我们假设 $t=0$ 时，膜电位为 $u_{rest}$ 。&lt;/p>
&lt;p>第一步，我们计算一下膜电位的时间过程。膜电位的轨迹可以通过整合方程 (3.3) 和初始条件 $u(t_0)=u_{rest}$ 得到，即 $0 &amp;lt; t &amp;lt; \Delta$ 时的解为：&lt;/p>
&lt;p>$$
u(t) = u_{rest} + RI_0 \left [ 1 - \exp \left ( -\frac{t}{\tau_m} \right ) \right ]. \tag{3.5}
$$&lt;/p>
&lt;p>如果输入电流从未停止，膜电位 (3.5) 将在 $t\rightarrow \infty$ 时接近渐进值 $u(\infty)=u_{rest}+RI_0$ 。一旦达到稳定状态，电容器上的电荷就不再变化。然后，所有的输入电流必须流经电阻。因此，电阻处的稳态电压是 $RI_0$ ，所哟膜的总电压是 $u_{rest}+RI_0$ 。&lt;/p>
&lt;h3 id="3-脉冲发射阈值spike-firing-threshold">
&lt;a href="#3-%e8%84%89%e5%86%b2%e5%8f%91%e5%b0%84%e9%98%88%e5%80%bcspike-firing-threshold" class="header-anchor">#&lt;/a>
3. 脉冲发射阈值（spike firing threshold）
&lt;/h3>
&lt;p>发射时间指的是一个给定的神经元发射动作电位 $t^f$ 的时刻。Leaky Integrate-and-Fire(LIF) 模型中的发射时间 $t^f$ 是由一个阈值标准定义的：&lt;/p>
&lt;p>$$
t^f\ : \quad u(t^f) = \vartheta. \tag{3.6}
$$&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231031165128-2023-10-31.webp"
alt="20231031165128-2023-10-31" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 3.3：Integrate-and-Fire 模型。(a)由恒定输入电流 $I_0=1.5$ 驱动的 Integrate-and-fire 神经元的膜电位的事件过程。电压 $\Delta u(t)=u-u_{rest}$ 被阈值 $\vartheta$ 归一化。输入电流的单位将被选择，以便 $I_0=1$ 能对应达到 $t\rightarrow \infty$ 的阈值曲线。在一个脉冲过后，电位被重置为 $u_{\tau} = u_{rest}$ 。(b)对随时间变化的输入电流的电压反应。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>虽然脉冲的形式没有被明确描述。然而注意到，在发射时间 $t^f$ 之后，电位立即被重置为一个新的值 $u_r &amp;lt; \vartheta$。&lt;/p>
&lt;p>$$
\lim_{\delta \rightarrow 0; \delta &amp;gt; 0} u(t^f + \delta) = u_r. \tag{3.7}
$$&lt;/p>
&lt;p>对于 $t&amp;gt;t^f$，动力学再次由 (3.3) 给出，直到发生下一个阈值跨越。联立 (3.3) 和 (3.7)，我们可以定义 Leak Integrate-and-Fire(LIF) 模型（Stein, 1967）。图 3.3 显示了由恒定电流 $I_0$ 驱动的 LIF 模型的电压曲线。&lt;/p>
&lt;p>对于神经元 $i$ 的发射时间，我们定义 $t_i^f$ ，其中 $f=1,2,\cdots $ 是脉冲的标签。从形式上看，我们可以将神经元的脉冲序列表示为发射时间的序列：&lt;/p>
&lt;p>$$
S_i(t) = \sum_{f} \delta (t-t_i^f). \tag{3.8}
$$&lt;/p>
&lt;p>其中，$\delta(x)$ 是 Dirac $\delta$ 函数：&lt;/p>
&lt;p>$$
\delta(x)=\begin{cases}
0,&amp;amp;x = 0 \\
\int_{-\infty}^{\infty} \delta(x) dx = 1,&amp;amp; x \neq 0
\end{cases} \tag{3.9}
$$&lt;/p>
&lt;h2 id="四lif-模型的局限性">
&lt;a href="#%e5%9b%9blif-%e6%a8%a1%e5%9e%8b%e7%9a%84%e5%b1%80%e9%99%90%e6%80%a7" class="header-anchor">#&lt;/a>
四、LIF 模型的局限性
&lt;/h2>
&lt;p>LIF 模型是高度简化的，忽略了神经元动力学的许多细节。尤其是，可能来自突触前神经元或者电流注入的输入被线性整合，与突触后神经元的状态无关：&lt;/p>
&lt;p>$$
\tau_m \frac{du}{dt} = -[u(t)-u_{rest}]+RI(t). \tag{4.1}
$$&lt;/p>
&lt;p>其中，$I(t)$ 是输入电流。此外，在每个输出脉冲之后，膜电位被重置。&lt;/p>
&lt;p>$$
\mathrm{if}\ u(t)=\vartheta \quad\mathrm{then} \ \lim_{\delta \rightarrow 0; \delta &amp;gt; 0} u(t+\delta) = u_r. \tag{4.2}
$$&lt;/p>
&lt;p>这样就不会保留对以前脉冲的记忆。现在，让我们列出到目前位置讨论的简化模型的主要局限性。&lt;/p>
&lt;h3 id="1-适应爆发和抑制性反弹adaptation-bursting-and-inhibitory-rebound">
&lt;a href="#1-%e9%80%82%e5%ba%94%e7%88%86%e5%8f%91%e5%92%8c%e6%8a%91%e5%88%b6%e6%80%a7%e5%8f%8d%e5%bc%b9adaptation-bursting-and-inhibitory-rebound" class="header-anchor">#&lt;/a>
1. 适应、爆发和抑制性反弹（adaptation, bursting and inhibitory rebound）
&lt;/h3>
&lt;p>通过细胞内电极注入电流。在一个标准的实验方案中，我们可以施加一个刺激电流，在时间 $t_0$ 从一个电流值 $I_1$ 切换到一个新的电流值 $I_2$ 。假设 $I_1=0$ ，这样神经元在 $t&amp;lt;t_0$ 时是静息状态的。如果电流 $I_2$ 足够大，它将引起 $t&amp;gt;t_0$ 的脉冲。大多数神经元会对当前阶跃做出反应，产生一列脉冲，脉冲之间的间隔会连续增加，直到达到周期性发射的稳定状态。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231031210458-2023-10-31.webp"
alt="20231031210458-2023-10-31" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 4.1：对当前阶跃的反应。在(a)(c)中，电流在 $t=t_0$ 时从 $I_1=0$ 切换到 $I_2&amp;gt;0$ 。fast-spiking neuron(a)在没有适应的情况下具有较短的脉冲间隔，而 regularly firing neuron(c)表现出适应性，可以看到脉冲间隔时间的增加。(b)中显示了一个 stuttering neuron(指发生语言或运动障碍的神经元，这种神经元在传递信号时可能会出现中断、重复或不协调的行为，导致口吃或肌肉抽动等症状)的例子。许多神经元在抑制性电流 $I_1 &amp;lt;0$ 被关闭后发出一个抑制性反弹脉冲(d)。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>图 4.1(c)中这种具有适应性的神经元被称为 regularly firing neuron。适应是一个缓慢的过程，在几个脉冲上积累起来。由于标准的 LIF 模型在每次脉冲后将电位重置位相同的值并重新启动整合过程，因此在最近的脉冲之后不会保留任何记忆。因此，LIF 神经元不具有适应性。&lt;/p>
&lt;p>第二类神经元为 fast-spiking neuron。这些神经元不显示适应性，因此可以用 LIF 模型来近似。许多抑制性神经元是 fast-spiking neuron。&lt;/p>
&lt;p>除了 regularly firing neuron 和 fast-spiking neuron 外，还有 bursting neuron 和 stuttering neuron。这些神经元对恒定刺激的反应是一连串的脉冲，这些脉冲周期性地爆发或非周期性地被相当长的间隔打断。&lt;/p>
&lt;p>另一个经常观察到的行为是抑制后的反弹。考虑到一个 $I_1&amp;lt;0$ 和 $I_2=0$ 的阶梯电流，即：在一个时间 $t_0$ 从一个抑制性电流 $I_1$ 切换到零电流。在这种情况下，许多神经元会在 $t&amp;gt;t_0$ 时发出一个或多个抑制性反弹脉冲，甚至抑制的释放也能出发动作电位。这种行为在图 4.1(d) 中显示。&lt;/p>
&lt;h3 id="2-分流抑制和反转电位shunting-inhibition-and-reversal-potential">
&lt;a href="#2-%e5%88%86%e6%b5%81%e6%8a%91%e5%88%b6%e5%92%8c%e5%8f%8d%e8%bd%ac%e7%94%b5%e4%bd%8dshunting-inhibition-and-reversal-potential" class="header-anchor">#&lt;/a>
2. 分流抑制和反转电位（shunting inhibition and reversal potential）
&lt;/h3>
&lt;p>在显示中，神经元被嵌入在一个大型网络中，并接受来自许多其它神经元的输入。假设一个来自突触前神经元 $j$ 的脉冲在时间 $t_j^f$ 被发送到突触后神经元 $i$ 的突触。突触后电位是脉冲到达突触后产生的，其形状和振幅不取决于突触后神经元 $i$ 的状态。这当然是一种简化，现实中的情况要复杂一些。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231031231444-2023-10-31.webp"
alt="20231031231444-2023-10-31" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 4.2：突触后电位的形状取决于去极化的瞬间水平。(a)当神经元处于静息状态时，在时间 $t^f$ 到达的抑制性突触的突触前脉冲对膜电位几乎没有影响，但如果膜电位 $u$ 高于静息电位，则影响很大。如果膜在抑制性突触的反转电位以下超极化，对突触前输入的反应就会改变符号。(b)兴奋性突触的脉冲引起突触后电位，其振幅仅略微取决于瞬间电压 $u$ 。对于大的去极化，振幅会饱和并且变小。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>在图 4.2 中示意性地勾勒了一个实验，其中神经元由恒定电流 $I_0$ 驱动。假设 $I_0$ 太弱，无法引起发射，因此，在一定的静息时间后，膜电位会稳定在一个恒定值 $u_0$ 。在 $t=t^f$ 时，其中一个突触前神经元发出一个脉冲，这样，不久之后动作电位就会到达突触，并且提供突触后神经元的额外刺激。更精确的说，脉冲在突触后神经元产生一个电流脉冲（突触后电流，PSC），其振幅为：&lt;/p>
&lt;p>$$
PSC \propto [u_0-E_{syn}] \tag{4.3}
$$&lt;/p>
&lt;p>其中，$u_0$ 是膜电位，$E_{syn}$ 是突触的反转电位。由于电流输入的振幅取决于 $u_0$ ，突触后电位的反应也是如此。&lt;/p>
&lt;p>突触后反应对神经元瞬间状态的依赖性在抑制性突触中最为明显。抑制性突触 $E_{syn}$ 的反转电位更低，但通常接近静息电位。因此，如果神经元处于精细状态，输入脉冲对膜电位几乎没有任何影响。然而，如果膜是去极化的，同样的输入脉冲会引起更大的抑制性突触后电位；如果膜已经超极化，输入脉冲甚至可以产生去极化的效果。&lt;/p>
&lt;p>虽然抑制性输入通常对膜电位只有很小的影响，但细胞膜的局部电导率可以大大增加。突触通常位于树突树的体部或轴上。由于它们的策略位置，少数抑制性输入脉冲可以“冲刷”树突树从从数百个兴奋性突触收集的整合输入。这种现象被称为分流抑制（shunting inhibition）。&lt;/p>
&lt;p>兴奋性突触的反转电位通常明显高于静息电位。如果膜去极化， $u_0 \gg u_rest$ ，兴奋性突触后电位的振幅就会降低，但其效果并不像抑制那样明显。对于非常高的去极化水平，可以观察到 EPSPs 的饱和。&lt;/p>
&lt;h3 id="3-脉冲后的电导率变化conductance-changes-after-spikes">
&lt;a href="#3-%e8%84%89%e5%86%b2%e5%90%8e%e7%9a%84%e7%94%b5%e5%af%bc%e7%8e%87%e5%8f%98%e5%8c%96conductance-changes-after-spikes" class="header-anchor">#&lt;/a>
3. 脉冲后的电导率变化（conductance changes after spikes）
&lt;/h3>
&lt;p>突触后电位的形状不仅取决于去极化的程度，而且更广泛地取决于神经元的内部状态，例如，相对于以前动作电位的时间。假设在时间 $t^f_i$ 产生了动作电位，突触前的脉冲在突触 $j$ 的时间 $t^f_j &amp;gt; t^f_i$ 到达。如果突触前脉冲在突触后动作电位期间或之后不久到达，它的影响不大，因为参与发射动作电位的一些离子通道依然是开放的。如果输入脉冲到达地更晚，它就会产生一个通常大小的突触后电位。&lt;/p>
&lt;h3 id="4-空间结构spatial-structure">
&lt;a href="#4-%e7%a9%ba%e9%97%b4%e7%bb%93%e6%9e%84spatial-structure" class="header-anchor">#&lt;/a>
4. 空间结构（spatial structure）
&lt;/h3>
&lt;p>突触后电位的形式也取决于突触在树突树上的位置。位于远离体细胞的突触引起的突触后电位通常比位于体细胞附近的突触引起的突触后电位小。如果几个输入在几毫秒内出现在同一个树突分支上，第一个输入将引起膜电位的局部变化，影响对稍晚到达的输入脉冲的反应幅度。这可能会导致饱和，或者在所谓的“活性”电流的情况下，导致反应的增强。而在 LIF 模型中，不同突触前脉冲之间这种非线性相互作用被忽略了。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231101212827-2023-11-01.webp"
alt="20231101212827-2023-11-01" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 4.3：突触后电位的形状（虚线）取决于自神经元 $i$ 的最后一次输出脉冲以来所经过的时间 $t-t^f_i$。 突触后的尖峰在时间 $t^f_i$ 被触发。突触前的脉冲在突触后神经元的尖峰后不久到达 $t^f_j$ ，其振幅比后来到达的脉冲小得多。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="五lif-模型的启示">
&lt;a href="#%e4%ba%94lif-%e6%a8%a1%e5%9e%8b%e7%9a%84%e5%90%af%e7%a4%ba" class="header-anchor">#&lt;/a>
五、LIF 模型的启示
&lt;/h2>
&lt;p>LIF 模型是一个极其简化的神经元模型。它忽略了神经科学家在研究活脑或脑组织切片中的神经元时观察到的许多特征。因此，问题出现了：我们应该从这样一个模型中期待什么？显然，我们不能指望它能解释神经元的完整生物化学和生物物理学。我们也不期望它能解释由树突树上某些 &amp;ldquo;热点 &amp;ldquo;的活性电流引起的高度非线性的相互作用。然而，当涉及到产生脉冲时，即在时间上精确计时的事件时，LIF 模型是十分精确的。因此，它有可能成为神经元中脉冲产生的有效模型，或者更准确地说，能成为细胞体中脉冲产生的有效模型。&lt;/p>
&lt;p>从脉冲生成模型中预测真实神经元脉冲的时间趋势是合理的。实验者使用第一个电极将随时间变化的输入电流 $I(t)$ 注入皮质神经元的细胞体中。通过一个独立的第二电极，实验者测量神经元体部的电压。毫不奇怪，电压轨迹不时地包含尖锐的电脉冲。这些是动作电位或脉冲。&lt;/p>
&lt;p>数学神经科学家现在把实验者使用的输入电流的时间过程 $I(t)$ 与神经元膜电位的时间过程一起，调整一个 LIF 模型的参数，使该模型在输入电流相同的情况下，在时间上产生与真实神经元大致相同的脉冲。这需要一些参数调整，但似乎是可行的。然而，更难解决的相关问题是，神经元模型现在是否可以用来预测真实神经元在新的随时间变化的输入电流下的发射时间，而这种新的输入电流在参数优化过程中并未使用。&lt;/p>
&lt;p>如上所述，神经元不仅在每次放电后表现出不稳定，而且还表现出在数百毫秒内积累起来的适应能力。简单的 LIF 模型并不能很好地预测真实神经元的脉冲时间。然而，如果在神经元模型中加入适应性(和不稳定因素)，预测结果就会出奇地好。增加适应性的一种直接方法是使神经元模型的放电阈值动态：在每个脉冲之后，将阈值 $\vartheta$ 增加一个增量 $\theta$ ，使得静息期间，阈值接近其固定值 $θ_0$ 。我们可以使用 Dirac $\delta$ 函数来表示这种动态阈值：&lt;/p>
&lt;p>$$
\tau_{adapt} \frac{d\vartheta}{dt} = -[\vartheta(t)-\vartheta_0] + \theta \sum_{f} \delta(t-t_i^f). \tag{5.1}
$$&lt;/p>
&lt;p>其中，$\tau_{adapt}$ 为适应时间常数（~几百毫秒），$t^f=t^{(1)}, t^{(2)}, t^{(3)}, \cdots$ 是神经元的发射时间。&lt;/p>
&lt;figure>&lt;img src="https://cloud.cuterwrite.fun/blog/20231101214530-2023-11-01.webp"
alt="20231101214530-2023-11-01" width="auto" loading="lazy">&lt;figcaption>
&lt;h4>图 5.1： 广义 LIF 模型与真实实验测量的对比。由波动电流驱动的真实神经元中记录的电压曲线（粗黑线）被叠加在由相同电流驱动的广义 LIF 模型（细线）上。除了少数额外或遗漏的脉冲（箭头），平均脉冲时间也得到了很好的预测。&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>从图 5.1 中可以看出，具有动态阈值的 LIF 模型的预测结果与真实神经元的电压曲线非常吻合。&lt;/p>
&lt;p>一旦我们确定了好的候选神经元模型，我们将可以尝试用这些模型构建大的神经元网络，并进一步尝试理解神经元网络所使用的动态和计算原理以及潜在的神经编码。虽然这并不意味着理解了整个大脑，但经过良好测试的简化神经元模型中理解大量神经元群体的原理是朝着这个方向迈出的第一步，也是重要的一步。&lt;/p>
&lt;h2 id="总结">
&lt;a href="#%e6%80%bb%e7%bb%93" class="header-anchor">#&lt;/a>
总结
&lt;/h2>
&lt;p>神经元信号由短电压脉冲组成，称为动作电位或者脉冲。这些脉冲沿着轴突行进，并被分配到几个突触后神经元，在那里它们又引起突触后电位。如果一个突触后神经元在一个短时间窗口内从多个突触前神经元那收集到足够多的脉冲，它的膜电位可能会达到一个临界值，然后发射出一个脉冲。我们说，神经元已经“发射”了一个脉冲。这个脉冲是神经元的输出信号，反过来又被传输到其它神经元。&lt;/p>
&lt;p>一个比较简单的脉冲神经元模型是 LIF 模型。该模型用一个线性微分方程描述了输入电流如何被整合并转化为膜电位 $u(t)$ 。这里的输入可以是实验者注入孤立神经元的输入电流，也可以是由大型高度连接网络中其它神经元到达的脉冲引起的突触输入电流。其次，如果膜电位到达阈值 $\vartheta$ ，LIF 神经元会产生一个输出脉冲。最后，在脉冲发射后，线性整合过程被重置，膜电位被重置为一个新的值 $u_r$ 。这个过程被称为膜电位的重置。&lt;/p>
&lt;p>LIF 模型并没有考虑持久的适应性，然而，如果 LIF 模型的电压动态地通过适应机制得到增强，那么它可以成为准确预测皮层神经元脉冲时间的有力工具。&lt;/p></description></item><item><title>NEST on HPC 安装教程</title><link>https://cuterwrite.top/p/nest-on-hpe-install/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://cuterwrite.top/p/nest-on-hpe-install/</guid><description>&lt;img src="https://cloud.cuterwrite.fun/blog/20231031002508-2023-10-31.webp" alt="Featured image of post NEST on HPC 安装教程" />&lt;h1 id="nest-on-hpc-安装教程">
&lt;a href="#nest-on-hpc-%e5%ae%89%e8%a3%85%e6%95%99%e7%a8%8b" class="header-anchor">#&lt;/a>
NEST on HPC 安装教程
&lt;/h1>
&lt;h2 id="1-安装-miniconda3">
&lt;a href="#1-%e5%ae%89%e8%a3%85-miniconda3" class="header-anchor">#&lt;/a>
1. 安装 MiniConda3
&lt;/h2>
&lt;p>从 &lt;a class="link" href="https://repo.anaconda.com/miniconda/Miniconda3-py39_23.5.2-0-Linux-x86_64.sh" target="_blank" rel="noopener" >Miniconda3 官方网站
&lt;span style="white-space: nowrap;">&lt;svg width=".8em" height=".8em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>
下载 Miniconda3_py39_23.5.2 。&lt;/p>
&lt;pre>&lt;code class="language-bast">wget https://repo.anaconda.com/miniconda/Miniconda3-py39_23.5.2-0-Linux-x86_64.sh
&lt;/code>&lt;/pre>
&lt;p>执行 Miniconda3-py39_23.5.2-0-Linux-x86_64.sh ，按照提示安装 Miniconda3。（安装在 &lt;code>$HOME/software/miniconda3/23.5.2&lt;/code> 目录下）&lt;/p>
&lt;p>然后，设置 Miniconda3 环境变量。&lt;/p>
&lt;pre>&lt;code class="language-bash">export PATH=$HOME/software/miniconda3/23.5.2/bin:$PATH
&lt;/code>&lt;/pre>
&lt;h2 id="2-安装-boost">
&lt;a href="#2-%e5%ae%89%e8%a3%85-boost" class="header-anchor">#&lt;/a>
2. 安装 Boost
&lt;/h2>
&lt;p>从 &lt;a class="link" href="https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.gz" target="_blank" rel="noopener" >Boost 官方网站
&lt;span style="white-space: nowrap;">&lt;svg width=".8em" height=".8em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>
下载 Boost。&lt;/p>
&lt;pre>&lt;code class="language-bash">wget https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.gz
tar -zxvf boost_1_77_0.tar.gz
cd boost_1_77_0
&lt;/code>&lt;/pre>
&lt;p>在 Boost 根目录下执行以下命令安装 Boost：&lt;/p>
&lt;pre>&lt;code class="language-bash">module load gcc/8.4.0
./bootstrap.sh --prefix=$HOME/software/boost/1.77.0-gcc-8.4.0 \
CC=gcc CXX=g++ FC=gfortran CFLAGS='-O3' CXXFLAGS='-O3' FCFLAGS='-O3'
&lt;/code>&lt;/pre>
&lt;p>配置环境变量：&lt;/p>
&lt;pre>&lt;code class="language-bash">export BOOST_ROOT=$HOME/software/boost/1.77.0-gcc-8.4.0
export LD_LIBRARY_PATH=$BOOST_ROOT/lib:$LD_LIBRARY_PATH
export LIBRARY_PATH=$BOOST_ROOT/lib:$LIBRARY_PATH
export CMAKE_PREFIX_PATH=$BOOST_ROOT/lib/cmake:$CMAKE_PREFIX_PATH
export CPATH=$BOOST_ROOT/include:$CPATH
export LD_RUN_PATH=$BOOST_ROOT/lib:$LD_RUN_PATH
&lt;/code>&lt;/pre>
&lt;h2 id="3-安装-gnu-scientific-library">
&lt;a href="#3-%e5%ae%89%e8%a3%85-gnu-scientific-library" class="header-anchor">#&lt;/a>
3. 安装 GNU Scientific Library
&lt;/h2>
&lt;p>从 &lt;a class="link" href="https://mirror.ibcp.fr/pub/gnu/gsl/gsl-latest.tar.gzz" target="_blank" rel="noopener" >GNU Scientific Library 镜像站
&lt;span style="white-space: nowrap;">&lt;svg width=".8em" height=".8em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>
下载 GSL。&lt;/p>
&lt;pre>&lt;code class="language-bash">wget https://mirror.ibcp.fr/pub/gnu/gsl/gsl-latest.tar.gz
tar -zxvf gsl-latest.tar.gz
&lt;/code>&lt;/pre>
&lt;p>在 GSL 根目录执行以下命令安装 GSL：&lt;/p>
&lt;pre>&lt;code class="language-bash">module load gcc/8.4.0
./configure --prefix=$HOME/software/gsl/2.7.1-gcc-8.4.0 \
CC=gcc CXX=g++ FC=gfortran CFLAGS='-O3' CXXFLAGS='-O3' FCFLAGS='-O3'
make install
&lt;/code>&lt;/pre>
&lt;p>配置环境变量：&lt;/p>
&lt;pre>&lt;code class="language-bash">export GSL_ROOT=$HOME/software/gsl/2.7.1-gcc-8.4.0
export LD_LIBRARY_PATH=$GSL_ROOT/lib:$LD_LIBRARY_PATH
export PATH=$GSL_ROOT/bin:$PATH
export CPATH=$GSL_ROOT/include:$CPATH
export LIBRARY_PATH=$GSL_ROOT/lib:$LIBRARY_PATH
export LD_RUN_PATH=$GSL_ROOT/lib:$LD_RUN_PATH
&lt;/code>&lt;/pre>
&lt;h2 id="4-安装-nest">
&lt;a href="#4-%e5%ae%89%e8%a3%85-nest" class="header-anchor">#&lt;/a>
4. 安装 NEST
&lt;/h2>
&lt;p>使用 Miniconda3 创建一个虚拟环境。&lt;/p>
&lt;pre>&lt;code class="language-bash">source activate
conda create -n nest python=3.9
conda activate nest
&lt;/code>&lt;/pre>
&lt;p>使用 pip 安装 numpy, scipy, cython==0.29.36&lt;/p>
&lt;pre>&lt;code class="language-bash">pip install numpy scipy cython==0.29.36
&lt;/code>&lt;/pre>
&lt;p>从 &lt;a class="link" href="https://github.com/nest/nest-simulator/archive/refs/tags/v3.4.tar.gz" target="_blank" rel="noopener" >NEST github 仓库
&lt;span style="white-space: nowrap;">&lt;svg width=".8em" height=".8em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>
下载 NEST 3.4。&lt;/p>
&lt;pre>&lt;code class="language-bash">wget https://github.com/nest/nest-simulator/archive/refs/tags/v3.4.tar.gz
tar -zxvf v3.4.tar.gz
&lt;/code>&lt;/pre>
&lt;p>在 nest-simulator-3.4 目录下执行:&lt;/p>
&lt;pre>&lt;code class="language-bash">module load gcc/8.4.0
module load mvaapich2/2.3.7-gcc-8.4.0
cmake -DCMAKE_C_COMPILER=mpicc \
-DCMAKE_CXX_COMPILER=mpicxx \
-Dwith-mpi=`which mpiexec` \
-DCMAKE_C_FLAGS='-O3 -fPIC' \
-DCMAKE_CXX_FLAGS='-O3' \
-Dwith-boost=$HOME/software/boost/1.77.0-gcc-8.4.0 \
-DGSL_INCLUDE_DIR=$HOME/software/gsl/2.7.1-gcc-8.4.0/include \
-DGSL_LIBRARY=$HOME/software/gsl/2.7.1-gcc-8.4.0/lib/libgsl.a \
-DGSL_CBLAS_LIBRARY=$HOME/software/gsl/2.7.1-gcc-8.4.0/lib/libgslcblas.a \
-DCMAKE_INSTALL_PREFIX:PATH=$HOME/software/nest-simulator/3.4-gcc-8.4.0 .
&lt;/code>&lt;/pre>
&lt;p>配置环境变量：&lt;/p>
&lt;pre>&lt;code class="language-bash">export NEST_ROOT=$HOME/software/nest-simulator/3.4-gcc-8.4.0
export LIBRARY_PATH=$NEST_ROOT/lib:$LIBRARY_PATH
export LD_LIBRARY_PATH=$NEST_ROOT/lib:$LD_LIBRARY_PATH
&lt;/code>&lt;/pre>
&lt;h2 id="5-运行-hpc_benchmark-测试">
&lt;a href="#5-%e8%bf%90%e8%a1%8c-hpc_benchmark-%e6%b5%8b%e8%af%95" class="header-anchor">#&lt;/a>
5. 运行 hpc_benchmark 测试
&lt;/h2>
&lt;p>运行 NEST 前需要配置 nest 环境：&lt;/p>
&lt;pre>&lt;code class="language-bash">source $HOME/software/nest-simulator/3.4-gcc-8.4.0/bin/nest_vars.sh
&lt;/code>&lt;/pre>
&lt;p>接着找到 &lt;code>hpc_benchmark.py&lt;/code> 目录，该文件位于 &lt;code>$HOME/software/nest-simulator/3.4-gcc-8.4.0/share/doc/nest/examples/hpc_benchmark.py&lt;/code>。修改其中的 params 以并行运行更大的模型。&lt;/p>
&lt;ol>
&lt;li>修改 nvp 为所需 MPI 进程数 × 每进程线程数，如 2 MPI 进程 × 14 线程 = 28&lt;/li>
&lt;li>设置合适的 scale ，如 10 。更大的需要更多 nvp 。&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-python">params = {
'nvp': 28, # total number of virtual processes
'scale': 10., # scaling factor of the network size
# others...
}
&lt;/code>&lt;/pre>
&lt;p>在 &lt;code>hpc_benchmark.py&lt;/code> 目录下执行：&lt;/p>
&lt;pre>&lt;code class="language-bash">export OMP_NUM_THREADS=14
mpiexec -N 1 -n 2 -p &amp;lt;partition_name&amp;gt; --export=all python3 hpc_benchmark.py
&lt;/code>&lt;/pre>
&lt;p>其中 -N 指定节点数，-n 指定 MPI 进程数，-p 指定分区名，如 &lt;code>compute&lt;/code>，&amp;ndash;export=all 用于将环境变量导出到 MPI 进程中。&lt;/p>
&lt;h2 id="总结">
&lt;a href="#%e6%80%bb%e7%bb%93" class="header-anchor">#&lt;/a>
总结
&lt;/h2>
&lt;p>本文介绍了在高性能计算机上安装 NEST-3.4 的方法。&lt;/p>
&lt;h2 id="参考资料">
&lt;a href="#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99" class="header-anchor">#&lt;/a>
参考资料
&lt;/h2>
&lt;ol>
&lt;li>&lt;a class="link" href="https://nest-simulator.readthedocs.io/en/latest/" target="_blank" rel="noopener" >NEST 官方文档
&lt;span style="white-space: nowrap;">&lt;svg width=".8em" height=".8em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>
&lt;/li>
&lt;/ol></description></item></channel></rss>