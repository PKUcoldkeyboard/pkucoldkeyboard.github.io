<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>容器技术 on cuterwrite (Pang S.Z)</title>
    <link>https://cuterwrite.top/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 容器技术 on cuterwrite (Pang S.Z)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 23 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cuterwrite.top/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于Flink Native Kubernetes的词频统计实验</title>
      <link>https://cuterwrite.top/p/flink-native-k8s/</link>
      <pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cuterwrite.top/p/flink-native-k8s/</guid>
      <description>Table of Contents generated with DocToc
基于Flink Native Kubernetes的词频统计实验 1 简介 1.1 实验环境 1.2 集群规划 2 Kubernetes集群部署 3 Flink Native Kubernetes部署 3.1 配置flink用户权限 3.2 创建session cluster 4 编写WordCount程序 5 实验结果 基于Flink Native Kubernetes的词频统计实验 1 简介 1.1 实验环境 本实验主要使用Ubuntu 20.04 64位作为系统环境，采用3台4核8GB云服务器作为Kubernetes集群部署机器，1台4核8GB云服务器作为集群管理工具Kuboard Spary部署机器，并作为NFS Server部署机器。使用的软件如下：
名称 版本 kuboard spary v1.2.3-amd64 kubernetes v1.25.4 calico v3.23.3 etcd v3.5.5 crictl v1.25.0 crun 1.4.5 krew v0.4.3 runc v1.1.4 cni v1.1.1 nerdctl 1.0.0 coredns v1.8.6 dnsautoscaler 1.8.5 pod_infra 3.</description>
    </item>
    
    <item>
      <title>基于Spark on k8s的词频统计实验</title>
      <link>https://cuterwrite.top/p/spark-on-k8s/</link>
      <pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cuterwrite.top/p/spark-on-k8s/</guid>
      <description>Table of Contents generated with DocToc
基于Spark on k8s的词频统计实验 1 简介 1.1 实验环境 1.2 集群规划 2 部署Kubernetes集群 2.1 安装Kuboard-Spray 2.2 加载离线资源包 2.3 安装Kubernetes集群 3 部署Spark on k8s 3.1 制作spark容器镜像 3.2 创建命名空间 3.3 配置spark用户权限 3.4 配置spark历史服务器 4 编写WordCount程序 5 实验结果 基于Spark on k8s的词频统计实验 1 简介 1.1 实验环境 本实验主要使用Ubuntu 20.04 64位作为系统环境，采用6台4核8GB云服务器作为Kubernetes集群部署机器，1台2核4GB云服务器作为集群管理工具Kuboard Spary部署机器，1台2核4GB云服务器作为NFS Server（使用Centos 7.6系统）部署机器。
使用的软件如下：
名称 版本 kuboard spary v1.2.3-amd64 kubernetes v1.25.4 calico v3.23.3 etcd v3.5.5 crictl v1.25.0 crun 1.4.5 krew v0.4.3 runc v1.</description>
    </item>
    
    <item>
      <title>Zookeeper on k8s部署实验</title>
      <link>https://cuterwrite.top/p/zookeeper-on-k8s/</link>
      <pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cuterwrite.top/p/zookeeper-on-k8s/</guid>
      <description>Zookeeper on k8s部署实验 1 简介 1.1 实验环境 1.2 集群规划 2 创建ConfigMap 2.1 创建zookeeper-environment 2.2 创建zookeeper-setup 3 创建StatefulSet 3.1 创建工作容器 3.2 创建存储挂载 3.3 创建SVC 3.4 设置亲和性 4 部署结果 4.1 集群信息 4.2 节点状态测试 Zookeeper on k8s部署实验 1 简介 1.1 实验环境 已经使用Kuboard Spary搭建好Kubernetes集群和Kuboard，使用的软件如下：
名称 版本 kuboard spary v1.2.3-amd64 kubernetes v1.25.5 zookeeper 3.8.0 1.2 集群规划 Zookeeper（三台4核8G的Ubuntu20.04服务器） 主机名 IP node1 192.168.0.6 node2 192.168.0.7 node3 192.168.0.14 2 创建ConfigMap 2.1 创建zookeeper-environment 创建一个名为zookeeper-environment的配置字典，包含变量对如下： Key Value ALLOW_ANONYMOUS_LOGIN yes BITNAMI_DEBUG false ZOO_4LW_COMMANDS_WHITELIST srvr, mntr, ruok ZOO_DATA_LOG_DIR ZOO_ENABLE_AUTH no ZOO_INIT_LIMIT 10 ZOO_LOG_LEVEL ERROR ZOO_MAX_CLIENT_CNXNS 60 ZOO_PORT_NUMBER 2181 ZOO_SERVERS zookeeper-statefulset-0.</description>
    </item>
    
  </channel>
</rss>
